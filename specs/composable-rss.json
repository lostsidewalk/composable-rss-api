{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ComposableRSS API",
    "description" : "ComposableRSS API",
    "contact" : {
      "name" : "Lost Sidewalk Software LLC",
      "url" : "https://www.lostsidewalk.com",
      "email" : "meh@lostsidewalk.com"
    },
    "version" : "1.0"
  },
  "externalDocs" : {
    "description" : "Composable RSS Official Documentation",
    "url" : "https://www.composablerss.com"
  },
  "servers" : [ {
    "url" : "https://api.composablerss.com",
    "description" : "ComposableRSS API Gateway"
  } ],
  "security" : [ {
    "apikey" : [ ]
  }, {
    "apisecret" : [ ]
  } ],
  "tags" : [ {
    "name" : "queue-credentials-controller",
    "description" : "Controller class for managing credential-related operations.\n\n This controller provides endpoints for managing credential objects within queues. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "queue-controller",
    "description" : "Controller class for managing queue-related operations.\n <p>\n This controller provides endpoints for managing queues, including fetching, creating,\n updating, and deleting queue configurations. Authenticated users with the \"VERIFIED_ROLE\"\n have access to these operations."
  }, {
    "name" : "post-url-controller",
    "description" : "Controller class for managing URL-related operations.\n\n This controller provides endpoints for managing URLs within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "post-media-controller",
    "description" : "Controller class for managing media-related operations.\n\n This controller provides endpoints for managing media objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "post-enclosure-controller",
    "description" : "Controller class for managing enclosure-related operations.\n\n This controller provides endpoints for managing enclosure objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "post-contributor-controller",
    "description" : "Controller class for managing contributor-related operations.\n\n This controller provides endpoints for managing contributor objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "post-content-controller",
    "description" : "Controller class for managing content-related operations.\n\n This controller provides endpoints for managing content objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "post-author-controller",
    "description" : "Controller class for managing author-related operations.\n\n This controller provides endpoints for managing author objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "post-controller",
    "description" : "Controller class for managing post-related operations.\n\n This controller provides endpoints for managing posts within queues. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  } ],
  "paths" : {
    "/queues/{queueId}/credentials/{basicUsername}" : {
      "put" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Update the password on the queue credential given by username, on a queue given by Id",
        "description" : "Update a password for the queue credential given by username.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n password of a queue credential object identified by its username, on a queue identified by its Id.",
        "operationId" : "updatePassword",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "basicUsername",
          "in" : "path",
          "description" : "The basic username of the credential to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated password",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Delete the queue credential given by username, on a queue given by Id",
        "description" : "Delete a queue credential given by username.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n a queue credential identified by its index, on a queue identified by its Id.",
        "operationId" : "deleteQueueCredential",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "basicUsername",
          "in" : "path",
          "description" : "The username of the credential to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue credential",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Update the properties of an existing queue",
        "description" : "Update the properties of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the properties\n of an existing queue identified by itsId. The queue's configuration properties are provided\n in the request body.",
        "operationId" : "updateQueue",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to be updated",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue configuration properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueDTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete a queue",
        "description" : "Delete a queue.",
        "operationId" : "deleteQueue",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to be deleted",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}/title" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the title of an existing queue",
        "description" : "Change the title of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the title\n of an existing queue.",
        "operationId" : "updateQueueTitle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to update the title for",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue title.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue title"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue title",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the title from a queue given by Id",
        "description" : "Delete the title for a queue given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the title from a queue identified by its Id.",
        "operationId" : "deleteQueueTitle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue with the title to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue title",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}/status" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the status of an existing queue",
        "description" : "Change the status of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the status\n of an existing queue. The status change can be used to mark a queue for import or\n un-mark it for import.",
        "operationId" : "updateQueueStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to update the status for",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated queue status information.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueStatusUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue status",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}/language" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the language of an existing queue",
        "description" : "Change the language of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the language\n of an existing queue.",
        "operationId" : "updateQueueLanguage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to update the language for",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue language.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue language"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue language",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}/imgsrc" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the image source of an existing queue",
        "description" : "Change the image source of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the image source\n of an existing queue.",
        "operationId" : "updateQueueImageSource",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to update the image source for",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The source for the queue thumbnail image.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated image source"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue image source",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the image source from a queue given by Id",
        "description" : "Delete the image source for a queue given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the image source from a queue identified by its Id.",
        "operationId" : "deleteQueueImageSource",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue with the image source to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue image source",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}/ident" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the ident string of an existing queue",
        "description" : "Change the ident string of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the ident string\n of an existing queue.",
        "operationId" : "updateQueueIdent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to update the ident string for",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue ident string.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue ident string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue ident",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}/generator" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the generator of an existing queue",
        "description" : "Change the generator of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the generator\n of an existing queue.",
        "operationId" : "updateQueueGenerator",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to update the generator for",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue generator.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue generator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue generator",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the generator from a queue given by Id",
        "description" : "Delete the generator for a queue given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the generator from a queue identified by its Id.",
        "operationId" : "deleteQueueGenerator",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue with the generator to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue generator",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}/desc" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the description of an existing queue",
        "description" : "Change the description of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the description\n of an existing queue.",
        "operationId" : "updateQueueDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to update the description for",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue description.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue description"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue description",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the description from a queue given by Id",
        "description" : "Delete the description for a queue given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the description from a queue identified by its Id.",
        "operationId" : "deleteQueueDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue with the description to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue description",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}/copyright" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the copyright of an existing queue",
        "description" : "Change the copyright of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the copyright\n of an existing queue.",
        "operationId" : "updateQueueCopyright",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to update the copyright for",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue copyright.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue copyright"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue copyright",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the copyright from a queue given by Id",
        "description" : "Delete the copyright for a queue given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the copyright from a queue identified by its Id.",
        "operationId" : "deleteQueueCopyright",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue with the copyright to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue copyright",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{id}/auth" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the authentication requirements of an existing queue",
        "description" : "Change the authentication requirement of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the authentication requirement\n of an existing queue.",
        "operationId" : "updateQueueAuthRequirement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the queue to update the authentication requirement for",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "'true' if this queue requires authentication.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "boolean",
                "description" : "The updated authentication requirement"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue authentication requirement",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/urls/{urlIdx}" : {
      "put" : {
        "tags" : [ "post-url-controller" ],
        "summary" : "Update the post URL given by idx, on a post given by Id",
        "description" : "Update a post URL given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post URL identified by its index, on a post identified by its Id.",
        "operationId" : "updatePostUrl",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "urlIdx",
          "in" : "path",
          "description" : "The index of the URL to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "A PostUrl, representing the URL to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostUrl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post URL",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-url-controller" ],
        "summary" : "Delete the post URL given by idx, on a post given by Id",
        "description" : "Delete a post URL given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n post URL identified by its index, on a post identified by its Id.",
        "operationId" : "deletePostUrl",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post from which the URL will be removed",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "urlIdx",
          "in" : "path",
          "description" : "The index of the URL to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post URL",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/media" : {
      "get" : {
        "tags" : [ "post-media-controller" ],
        "summary" : "Get all medias in the post given by its Id",
        "description" : "Get all media in the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n medias in a specific post identified by its Id.",
        "operationId" : "getPostMedia",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch medias from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post medias",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostMedia"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "post-media-controller" ],
        "summary" : "Update the post media object on a post given by Id",
        "description" : "Update a post media given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post media object, on a post identified by its Id.",
        "operationId" : "updatePostMedia",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostMedia object, representing new media to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostMedia"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post media",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-media-controller" ],
        "summary" : "Delete the post media object on a post given by Id",
        "description" : "Delete a post media object from a post given by Id,\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n a post media object on a post identified by its Id.",
        "operationId" : "deletePostMedia",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post media",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/enclosures/{enclosureIdx}" : {
      "put" : {
        "tags" : [ "post-enclosure-controller" ],
        "summary" : "Update the post enclosure given by idx, on a post given by Id",
        "description" : "Update a post enclosure given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post enclosure identified by its index, on a post identified by its Id.",
        "operationId" : "updatePostEnclosure",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "enclosureIdx",
          "in" : "path",
          "description" : "The index of the enclosure to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "A EnclosureObject, representing new enclosure to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEnclosure"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post enclosure",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-enclosure-controller" ],
        "summary" : "Delete the post enclosure given by idx, on a post given by Id",
        "description" : "Delete a post enclosure given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n a post enclosure identified by its index, on a post identified by its Id.",
        "operationId" : "deletePostEnclosure",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "enclosureIdx",
          "in" : "path",
          "description" : "The index of the enclosure to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post enclosure",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/contributors/{contributorIdx}" : {
      "put" : {
        "tags" : [ "post-contributor-controller" ],
        "summary" : "Update the post contributor given by idx, on a post given by Id",
        "description" : "Update a post contributor given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post contributor identified by its index, on a post identified by its Id.",
        "operationId" : "updatePostContributor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contributorIdx",
          "in" : "path",
          "description" : "The index of the contributor to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "A ContributorObject, representing new contributor to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPerson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post contributor",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-contributor-controller" ],
        "summary" : "Delete the post contributor given by idx, on a post given by Id",
        "description" : "Delete a post contributor given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n a post contributor identified by its index, on a post identified by its Id.",
        "operationId" : "deletePostContributor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contributorIdx",
          "in" : "path",
          "description" : "The index of the contributor to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post contributor",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/content/{contentIdx}" : {
      "put" : {
        "tags" : [ "post-content-controller" ],
        "summary" : "Update the post content given by idx, on a post given by Id",
        "description" : "Update a post content object given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post content object identified by its index, on a post identified by its Id.",
        "operationId" : "updatePostContent",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contentIdx",
          "in" : "path",
          "description" : "The index of the content to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "A ContentObject, representing new content to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post content",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-content-controller" ],
        "summary" : "Delete the post content given by idx, on a post given by Id",
        "description" : "Delete a post content object given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n a post content object identified by its index, on a post identified by its Id.",
        "operationId" : "deletePostContent",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contentIdx",
          "in" : "path",
          "description" : "The index of the content to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post content",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/authors/{authorIdx}" : {
      "put" : {
        "tags" : [ "post-author-controller" ],
        "summary" : "Update the post author given by idx, on a post given by Id",
        "description" : "Update a post author given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post author identified by its index, on a post identified by its Id.",
        "operationId" : "updatePostAuthor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "authorIdx",
          "in" : "path",
          "description" : "The index of the author to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "A AuthorObject, representing new author to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPerson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post author",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-author-controller" ],
        "summary" : "Delete the post author given by idx, on a post given by Id",
        "description" : "Delete a post author given by index.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n a post author identified by its index, on a post identified by its Id.",
        "operationId" : "deletePostAuthor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "authorIdx",
          "in" : "path",
          "description" : "The index of the author to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post author",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{id}" : {
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the post given by Id",
        "description" : "Update a post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update any\n attribute of a post identified by its Id.",
        "operationId" : "updatePost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostDTO"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the post given by Id",
        "description" : "Delete a post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n a post identified by its Id.",
        "operationId" : "deletePost",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{id}/title" : {
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the title of the post given by Id",
        "description" : "Update the title of the post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n title of a post identified by its Id.",
        "operationId" : "updatePostTitle",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post title.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post title",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentObject"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{id}/status" : {
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the publication status of the post given by Id",
        "description" : "Update the publication status of the post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n publication status of a post identified by its Id. The status can be 'PUB_PENDING',\n 'DEPUB_PENDING', or null.",
        "operationId" : "updatePostStatus",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post status.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostStatusUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post publication status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeployResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{id}/rights" : {
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the rights string of the post given by Id",
        "description" : "Update the rights string of the post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n rights string of a post identified by its Id.",
        "operationId" : "updatePostRights",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post rights string.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post rights string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the rights string from a post given by Id",
        "description" : "Delete the rights string for a post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the rights string from a post identified by its Id.",
        "operationId" : "deletePostRights",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post with the rights string to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post rights string",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{id}/itunes" : {
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the iTunes descriptor of the post given by Id",
        "description" : "Update the iTunes descriptor of the post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n iTunes descriptor of a post identified by its Id.",
        "operationId" : "updatePostITunes",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post iTunes descriptor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostITunes"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post iTunes descriptor",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostITunes"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the iTunee descriptor from a post given by Id",
        "description" : "Delete the iTunes descriptor for a post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the iTunes descriptor from a post identified by its Id.",
        "operationId" : "deletePostITunes",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post with the iTunes descriptor to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post iTunes descriptor",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{id}/expiration" : {
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the expiration timestamp of the post given by Id",
        "description" : "Update the expiration timestamp of the post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n expiration timestamp of a post identified by its Id.",
        "operationId" : "updateExpirationTimestamp",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post expiration timestamp.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string",
                "format" : "date-time"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post expiration timestamp",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the expiration timestamp from a post given by Id",
        "description" : "Delete the expiration timestamp for a post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the expiration timestamp from a post identified by its Id.",
        "operationId" : "deleteExpirationTimestamp",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post with the expiration timestamp to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post expiration timestamp",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{id}/desc" : {
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the description of the post given by Id",
        "description" : "Update the description of the post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n description of a post identified by its Id.",
        "operationId" : "updatePostDescription",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post description.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post description",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentObject"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{id}/comment" : {
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the comment string of the post given by Id",
        "description" : "Update the comment string of the post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n comment string of a post identified by its Id.",
        "operationId" : "updatePostComment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post comment string.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post comment string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the comment string from a post given by Id",
        "description" : "Delete the comment string for a post given by Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the comment string from a post identified by its Id.",
        "operationId" : "deletePostComment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The Id of the post with the comment string to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post comment string",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get all queue definitions",
        "description" : "Get all queue definitions for the authenticated user.",
        "operationId" : "getQueues",
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue definitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QueueDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Create a new queue",
        "description" : "Create new queue definitions.",
        "operationId" : "createQueue",
        "requestBody" : {
          "description" : "List of queue configuration requests.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created queue configurations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QueueDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/credentials" : {
      "get" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Get all credentials in the queue given by its Id",
        "description" : "Get all credential in the queue given by its Id.  Passwords are masked.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n credentials in a specific queue identified by its Id.",
        "operationId" : "getQueueCredential",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch credentials from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QueueCredential"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Add new credential to the queue given by its Id",
        "description" : "Add new credential to the queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add new credential\n to a specific queue identified by its Id.",
        "operationId" : "addQueueCredential",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to add credential to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A QueueCredentialConfigRequest object representing new credential to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueCredentialConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully added credential to queue",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{queueId}" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get all posts in the queue given by its Id",
        "description" : "Get all posts in the queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n posts in a specific queue identified by its Id.",
        "operationId" : "getPosts",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch posts from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched posts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "post-controller" ],
        "summary" : "Create new posts in the queue given by queueId",
        "description" : "Create new posts in the queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to create new posts\n in a specific queue identified by its Id.",
        "operationId" : "createPosts",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to create posts in",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostConfigRequests, representing new posts to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully created posts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostDTO"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/urls" : {
      "get" : {
        "tags" : [ "post-url-controller" ],
        "summary" : "Get all URLs in the post given by its Id",
        "description" : "Get all URLs in the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n URLs in a specific post identified by its Id.",
        "operationId" : "getPostUrls",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch URLs from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post URLs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostUrl"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "post-url-controller" ],
        "summary" : "Add a new URL to the post given by its Id",
        "description" : "Add a new URL to the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add new URLs\n to a specific post identified by its Id.",
        "operationId" : "addPostUrl",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add URL to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostUrl object, representing new URL to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostUrl"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully added URL to post",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/enclosures" : {
      "get" : {
        "tags" : [ "post-enclosure-controller" ],
        "summary" : "Get all enclosures in the post given by its Id",
        "description" : "Get all enclosure in the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n enclosures in a specific post identified by its Id.",
        "operationId" : "getPostEnclosures",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch enclosures from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post enclosures",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostEnclosure"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "post-enclosure-controller" ],
        "summary" : "Add new enclosure to the post given by its Id",
        "description" : "Add new enclosure to the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add new enclosure\n to a specific post identified by its Id.",
        "operationId" : "addPostEnclosure",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add enclosure to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostEnclosure object representing new enclosure to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEnclosure"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully added enclosure to post",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/contributors" : {
      "get" : {
        "tags" : [ "post-contributor-controller" ],
        "summary" : "Get all contributors in the post given by its Id",
        "description" : "Get all contributor in the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n contributors in a specific post identified by its Id.",
        "operationId" : "getPostContributor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch contributors from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post contributors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostPerson"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "post-contributor-controller" ],
        "summary" : "Add new contributor to the post given by its Id",
        "description" : "Add new contributor to the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add new contributor\n to a specific post identified by its Id.",
        "operationId" : "addPostContributor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add contributor to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostPerson object representing new contributor to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPerson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully added contributor to post",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/content" : {
      "get" : {
        "tags" : [ "post-content-controller" ],
        "summary" : "Get all content in the post given by its Id",
        "description" : "Get all content in the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n content in a specific post identified by its Id.",
        "operationId" : "getPostContent",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch content from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post content",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContentObject"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "post-content-controller" ],
        "summary" : "Add new content to the post given by its Id",
        "description" : "Add new content to the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add new content\n to a specific post identified by its Id.",
        "operationId" : "addPostContent",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add content to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A ContentObject, representing new content to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully add content to post",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/authors" : {
      "get" : {
        "tags" : [ "post-author-controller" ],
        "summary" : "Get all authors in the post given by its Id",
        "description" : "Get all author in the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n authors in a specific post identified by its Id.",
        "operationId" : "getPostAuthors",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch authors from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post authors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostPerson"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "post-author-controller" ],
        "summary" : "Add new author to the post given by its Id",
        "description" : "Add new author to the post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add new author\n to a specific post identified by its Id.",
        "operationId" : "addPostAuthor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add author to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostPerson object representing new author to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPerson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully added author to post",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/transport" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the transport identifier of a queue given by its Id",
        "description" : "Get the transport identifier of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the transport identifier of a\n queue identified by its Id.",
        "operationId" : "getQueueTransport",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the transport identifier from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue transport identifier",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/title" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the title of a queue given by its Id",
        "description" : "Get the title of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the title of a\n queue identified by its Id.",
        "operationId" : "getQueueTitle",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the title from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue title",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/status" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the status of a queue given by its Id",
        "description" : "Get the status of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the status of a\n queue identified by its Id.  The status of a post is given by the QueueStatus enumeration.",
        "operationId" : "getQueueStatus",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch status from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue status",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "enum" : [ "ENABLED", "DISABLED" ]
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/language" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the language of a queue given by its Id",
        "description" : "Get the language of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the language of a\n queue identified by its Id.",
        "operationId" : "getQueueLanguage",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the language from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue language",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/imgsrc" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the image source of a queue given by its Id",
        "description" : "Get the image source of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the image source of a\n queue identified by its Id.",
        "operationId" : "getQueueImageSource",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the image source from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue image source",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/ident" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the ident string of a queue given by its Id",
        "description" : "Get the ident string of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the ident string of a\n queue identified by its Id.",
        "operationId" : "getQueueIdent",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the ident string from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue ident string",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/generator" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the generator of a queue given by its Id",
        "description" : "Get the generator of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the generator of a\n queue identified by its Id.",
        "operationId" : "getQueueGenerator",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the generator from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue generator",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/desc" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the description of a queue given by its Id",
        "description" : "Get the description of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get description of a\n queue identified by its Id.",
        "operationId" : "getQueueDescription",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the description from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue description",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/deployed" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the deployed timestamp of a queue given by its Id",
        "description" : "Get the deployed timestamp of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the deployed timestamp of a\n queue identified by its Id.",
        "operationId" : "getQueueDeployedTimestamp",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the deployed timestamp from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue deployed timestamp",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/copyright" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the copyright of a queue given by its Id",
        "description" : "Get the copyright of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the copyright of a\n queue identified by its Id.",
        "operationId" : "getQueueCopyright",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the copyright from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue copyright",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/queues/{queueId}/auth" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the authentication requirement of a queue given by its Id",
        "description" : "Get the authentication requirement of a queue given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the authentication requirement of a\n queue identified by its Id.",
        "operationId" : "getQueueAuthRequirement",
        "parameters" : [ {
          "name" : "queueId",
          "in" : "path",
          "description" : "The Id of the queue to fetch the authentication requirement from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue authentication requirement",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/updated" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the last updated timestamp of a post given by its Id.",
        "description" : "Get the last updated timestamp of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n last updated timestamp of a post identified by its Id.",
        "operationId" : "getLastUpdatedTimestamp",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch last updated timestamp from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post last updated timestamp",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/title" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the title of a post given by its Id.",
        "description" : "Get the title of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n title of a post identified by its Id.",
        "operationId" : "getPostTitle",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch title from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post title",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentObject"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/status" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the status of a post given by its Id",
        "description" : "Get the status of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the status of a\n posts identified by its Id.  The status of a post is given by the PostPubStatus enumeration.",
        "operationId" : "getPostStatus",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch status from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post status",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "enum" : [ "PUB_PENDING", "DEPUB_PENDING", "ARCHIVED", "PURGE_PENDING" ]
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/rights" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the rights string of a post given by its Id.",
        "description" : "Get the rights string of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n rights string of a post identified by its Id.",
        "operationId" : "getPostRights",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch rights string from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post rights string",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/queue" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the queue Id of a post given by its Id.",
        "description" : "Get the queue Id of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n queue Id of a post identified by its Id.",
        "operationId" : "getPostQueueId",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch queue Id from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post queue Id",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/published" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the published timestamp of a post given by its Id.",
        "description" : "Get the published timestamp of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n published timestamp of a post identified by its Id.",
        "operationId" : "getPublishedTimestamp",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch published timestamp from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post published timestamp",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/itunes" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the iTunes descriptor of a post given by its Id.",
        "description" : "Get the iTunes descriptor of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n iTunes descriptor of a post identified by its Id.",
        "operationId" : "getPostITunes",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch iTunes descriptor from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post iTunes descriptor",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostITunes"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/expiration" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the expiration timestamp of a post given by its Id.",
        "description" : "Get the expiration timestamp of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n expiration timestamp of a post identified by its Id.",
        "operationId" : "getExpirationTimestamp",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch expiration timestamp from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post expiration timestamp",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/desc" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the description of a post given by its Id.",
        "description" : "Get the description of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n description of a post identified by its Id.",
        "operationId" : "getPostDesc",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch description from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post description",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentObject"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    },
    "/posts/{postId}/comment" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the comment string of a post given by its Id.",
        "description" : "Get the comment string of a post given by its Id.\n\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n comment string of a post identified by its Id.",
        "operationId" : "getPostComment",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch comment string from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post comment string",
            "content" : {
              "*/*" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "VERIFIED_ROLE" : [ ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ResponseMessage" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "object"
          }
        },
        "description" : ""
      },
      "ExportConfigDTO" : {
        "type" : "object"
      },
      "QueueConfigRequest" : {
        "required" : [ "ident" ],
        "type" : "object",
        "properties" : {
          "ident" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the queue."
          },
          "title" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "The title of the queue (optional)."
          },
          "description" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The description of the queue (optional)."
          },
          "generator" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "The generator of the queue."
          },
          "exportConfig" : {
            "$ref" : "#/components/schemas/ExportConfigDTO"
          },
          "copyright" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The copyright information of the queue."
          },
          "language" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "The language of the queue."
          },
          "imgSrc" : {
            "maxLength" : 16384,
            "minLength" : 0,
            "type" : "string",
            "description" : "The image source of the queue."
          }
        },
        "description" : "List of queue configuration requests"
      },
      "QueueDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The unique identifier of the queue.",
            "format" : "int64"
          },
          "ident" : {
            "type" : "string",
            "description" : "The identifier of the queue."
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the queue."
          },
          "description" : {
            "type" : "string",
            "description" : "The description of the queue."
          },
          "generator" : {
            "type" : "string",
            "description" : "The generator information of the queue."
          },
          "transportIdent" : {
            "type" : "string",
            "description" : "The transport identifier of the queue."
          },
          "exportConfig" : {
            "type" : "object",
            "description" : "The configuration for exporting the queue."
          },
          "copyright" : {
            "type" : "string",
            "description" : "The copyright information of the queue."
          },
          "language" : {
            "type" : "string",
            "description" : "The language of the queue."
          },
          "queueImgSrc" : {
            "type" : "string",
            "description" : "The image source of the queue."
          },
          "lastDeployed" : {
            "type" : "string",
            "description" : "The timestamp when the queue was last deployed.",
            "format" : "date-time"
          },
          "isAuthenticated" : {
            "type" : "boolean",
            "description" : "Whether authentication is required for the queue."
          },
          "enabled" : {
            "type" : "boolean"
          }
        },
        "description" : ""
      },
      "QueueStatusUpdateRequest" : {
        "required" : [ "newStatus" ],
        "type" : "object",
        "properties" : {
          "newStatus" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "description" : "The new status to be set for the queue."
          }
        },
        "description" : "The request containing the updated queue status information"
      },
      "PostUrl" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "The title of the URL."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the URL."
          },
          "href" : {
            "type" : "string",
            "description" : "The actual URL (href) value."
          },
          "hreflang" : {
            "type" : "string",
            "description" : "The language of the content at the URL."
          },
          "rel" : {
            "type" : "string",
            "description" : "The relationship of the URL to the current document."
          }
        },
        "description" : "Represents a URL associated with a post."
      },
      "PostMedia" : {
        "type" : "object",
        "properties" : {
          "postMediaMetadata" : {
            "$ref" : "#/components/schemas/PostMediaMetadata"
          },
          "postMediaGroups" : {
            "type" : "array",
            "description" : "List of media groups associated with the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaGroup"
            }
          },
          "postMediaContents" : {
            "type" : "array",
            "description" : "List of media contents associated with the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaContent"
            }
          }
        },
        "description" : "Represents media information associated with a post."
      },
      "PostMediaCategory" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "scheme" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaCommunity" : {
        "type" : "object",
        "properties" : {
          "postMediaStarRating" : {
            "$ref" : "#/components/schemas/PostMediaStarRating"
          },
          "postMediaStatistics" : {
            "$ref" : "#/components/schemas/PostMediaStatistics"
          },
          "postMediaTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaTag"
            }
          }
        }
      },
      "PostMediaContent" : {
        "type" : "object",
        "properties" : {
          "audioChannels" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bitRate" : {
            "type" : "number",
            "format" : "float"
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64"
          },
          "expression" : {
            "$ref" : "#/components/schemas/PostMediaExpression"
          },
          "fileSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "frameRate" : {
            "type" : "number",
            "format" : "float"
          },
          "height" : {
            "type" : "integer",
            "format" : "int32"
          },
          "language" : {
            "type" : "string"
          },
          "medium" : {
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/PostMediaMetadata"
          },
          "reference" : {
            "$ref" : "#/components/schemas/PostMediaReference"
          },
          "samplingRate" : {
            "type" : "number",
            "format" : "float"
          },
          "type" : {
            "type" : "string"
          },
          "width" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaCredit" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "scheme" : {
            "type" : "string"
          }
        }
      },
      "PostMediaExpression" : {
        "type" : "object",
        "properties" : {
          "expression" : {
            "type" : "string"
          }
        }
      },
      "PostMediaGroup" : {
        "type" : "object",
        "properties" : {
          "postMediaContents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaContent"
            }
          },
          "postMediaMetadata" : {
            "$ref" : "#/components/schemas/PostMediaMetadata"
          },
          "defaultContentIndex" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaHash" : {
        "type" : "object",
        "properties" : {
          "hashStr" : {
            "type" : "string"
          },
          "algorithm" : {
            "type" : "string"
          }
        }
      },
      "PostMediaLicense" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "format" : "url"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaLocation" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "start" : {
            "$ref" : "#/components/schemas/Time"
          },
          "end" : {
            "$ref" : "#/components/schemas/Time"
          }
        }
      },
      "PostMediaMetadata" : {
        "type" : "object",
        "properties" : {
          "thumbnails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaThumbnail"
            }
          },
          "community" : {
            "$ref" : "#/components/schemas/PostMediaCommunity"
          },
          "categories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaCategory"
            }
          },
          "copyright" : {
            "type" : "string"
          },
          "copyrightUrl" : {
            "type" : "string",
            "format" : "uri"
          },
          "desc" : {
            "type" : "string"
          },
          "descType" : {
            "type" : "string"
          },
          "backLinks" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "url"
            }
          },
          "comments" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "credits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaCredit"
            }
          },
          "hash" : {
            "$ref" : "#/components/schemas/PostMediaHash"
          },
          "keywords" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "licenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaLicense"
            }
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaLocation"
            }
          },
          "peerLinks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaPeerLink"
            }
          },
          "prices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaPrice"
            }
          },
          "ratings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaRating"
            }
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "restrictions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaRestriction"
            }
          },
          "rights" : {
            "type" : "string"
          },
          "scenes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaScene"
            }
          },
          "status" : {
            "$ref" : "#/components/schemas/PostMediaStatus"
          },
          "subTitles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaSubTitle"
            }
          },
          "text" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaText"
            }
          },
          "title" : {
            "type" : "string"
          },
          "titleType" : {
            "type" : "string"
          }
        }
      },
      "PostMediaPeerLink" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "format" : "url"
          }
        }
      },
      "PostMediaPrice" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "RENT", "PURCHASE", "PACKAGE", "SUBSCRIPTION" ]
          },
          "price" : {
            "type" : "number"
          },
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            }
          },
          "info" : {
            "type" : "string",
            "format" : "url"
          }
        }
      },
      "PostMediaRating" : {
        "type" : "object",
        "properties" : {
          "scheme" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaReference" : {
        "type" : "object",
        "properties" : {
          "uri" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "PostMediaRestriction" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/Type"
          },
          "relationship" : {
            "$ref" : "#/components/schemas/Relationship"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaScene" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/Time"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/Time"
          }
        }
      },
      "PostMediaStarRating" : {
        "type" : "object",
        "properties" : {
          "average" : {
            "type" : "number",
            "format" : "double"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "max" : {
            "type" : "integer",
            "format" : "int32"
          },
          "min" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaStatistics" : {
        "type" : "object",
        "properties" : {
          "favorites" : {
            "type" : "integer",
            "format" : "int32"
          },
          "views" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaStatus" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "active", "blocked", "deleted" ]
          }
        }
      },
      "PostMediaSubTitle" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "format" : "url"
          },
          "lang" : {
            "type" : "string"
          }
        }
      },
      "PostMediaTag" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaText" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "end" : {
            "$ref" : "#/components/schemas/Time"
          },
          "start" : {
            "$ref" : "#/components/schemas/Time"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaThumbnail" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32"
          },
          "width" : {
            "type" : "integer",
            "format" : "int32"
          },
          "time" : {
            "$ref" : "#/components/schemas/Time"
          },
          "url" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "Relationship" : {
        "type" : "object"
      },
      "Time" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Type" : {
        "type" : "object"
      },
      "PostEnclosure" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "description" : "The URL of the enclosure."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the enclosure."
          },
          "length" : {
            "type" : "integer",
            "description" : "The length of the enclosure in bytes.",
            "format" : "int64"
          }
        },
        "description" : "Represents an enclosure associated with a post."
      },
      "PostPerson" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the person."
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the person."
          },
          "uri" : {
            "type" : "string",
            "description" : "The URI of the person."
          }
        },
        "description" : "Represents a person associated with a post."
      },
      "ContentObject" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "description" : "The type of the content object."
          },
          "value" : {
            "type" : "string",
            "description" : "The value of the content object."
          }
        },
        "description" : "Represents a content object within a post."
      },
      "Duration" : {
        "type" : "object",
        "properties" : {
          "milliseconds" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "PostConfigRequest" : {
        "type" : "object",
        "properties" : {
          "postTitle" : {
            "$ref" : "#/components/schemas/ContentObject"
          },
          "postDesc" : {
            "$ref" : "#/components/schemas/ContentObject"
          },
          "postContents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ContentObject"
            }
          },
          "postITunes" : {
            "$ref" : "#/components/schemas/PostITunes"
          },
          "postUrl" : {
            "type" : "string"
          },
          "postUrls" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostUrl"
            }
          },
          "postComment" : {
            "type" : "string"
          },
          "postRights" : {
            "type" : "string"
          },
          "contributors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostPerson"
            }
          },
          "authors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostPerson"
            }
          },
          "postCategories" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "expirationTimestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "enclosures" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostEnclosure"
            }
          }
        },
        "description" : "List of post configuration requests"
      },
      "PostITunes" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "description" : "The author associated with this post"
          },
          "isExplicitNullable" : {
            "type" : "boolean",
            "description" : "Indicates if the explicit status is nullable"
          },
          "image" : {
            "type" : "string",
            "description" : "The URL of the image associated with the post",
            "format" : "url"
          },
          "imageUri" : {
            "type" : "string",
            "description" : "The URI of the image associated with the post"
          },
          "keywords" : {
            "type" : "array",
            "description" : "Keywords associated with the post",
            "items" : {
              "type" : "string"
            }
          },
          "subTitle" : {
            "type" : "string",
            "description" : "Subtitle of the post"
          },
          "summary" : {
            "type" : "string",
            "description" : "Summary of the post"
          },
          "duration" : {
            "$ref" : "#/components/schemas/Duration"
          },
          "episode" : {
            "type" : "integer",
            "description" : "Episode number of the post",
            "format" : "int32"
          },
          "episodeType" : {
            "type" : "string",
            "description" : "Type of the episode"
          },
          "order" : {
            "type" : "integer",
            "description" : "Order of the post",
            "format" : "int32"
          },
          "season" : {
            "type" : "integer",
            "description" : "Season number of the post",
            "format" : "int32"
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the post"
          },
          "explicit" : {
            "type" : "boolean"
          },
          "block" : {
            "type" : "boolean"
          },
          "closeCaptioned" : {
            "type" : "boolean"
          }
        },
        "description" : "Represents iTunes-specific metadata associated with a post."
      },
      "PostDTO" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The unique identifier of the post.",
            "format" : "int64"
          },
          "queueId" : {
            "type" : "integer",
            "description" : "The ID of the queue to which the post belongs.",
            "format" : "int64"
          },
          "postTitle" : {
            "$ref" : "#/components/schemas/ContentObject"
          },
          "postDesc" : {
            "$ref" : "#/components/schemas/ContentObject"
          },
          "postContents" : {
            "type" : "array",
            "description" : "A list of ContentObject objects (the post content)",
            "items" : {
              "$ref" : "#/components/schemas/ContentObject"
            }
          },
          "postITunes" : {
            "$ref" : "#/components/schemas/PostITunes"
          },
          "postUrl" : {
            "type" : "string",
            "description" : "The (primary) post URL"
          },
          "postUrls" : {
            "type" : "array",
            "description" : "A list of alternate post URLs",
            "items" : {
              "$ref" : "#/components/schemas/PostUrl"
            }
          },
          "importTimestamp" : {
            "type" : "string",
            "description" : "The timestamp of when the post was imported.",
            "format" : "date-time"
          },
          "postComment" : {
            "type" : "string",
            "description" : "The comment associated with the post."
          },
          "postRights" : {
            "type" : "string",
            "description" : "The rights associated with the post."
          },
          "contributors" : {
            "type" : "array",
            "description" : "The list of contributors to the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostPerson"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "The list of authors of the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostPerson"
            }
          },
          "postCategories" : {
            "type" : "array",
            "description" : "The list of categories associated with the post.",
            "items" : {
              "type" : "string"
            }
          },
          "publishTimestamp" : {
            "type" : "string",
            "description" : "The timestamp of when the post was published.",
            "format" : "date-time"
          },
          "expirationTimestamp" : {
            "type" : "string",
            "description" : "The timestamp of when the post will expire.",
            "format" : "date-time"
          },
          "enclosures" : {
            "type" : "array",
            "description" : "The list of enclosures associated with the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostEnclosure"
            }
          },
          "lastUpdatedTimestamp" : {
            "type" : "string",
            "description" : "The timestamp of the last update to the post.",
            "format" : "date-time"
          },
          "published" : {
            "type" : "boolean"
          }
        },
        "description" : ""
      },
      "PostStatusUpdateRequest" : {
        "type" : "object",
        "properties" : {
          "newStatus" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "description" : "The new status to be set for the post."
          }
        },
        "description" : "A request model for updating the status of a post."
      },
      "DeployResponse" : {
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "description" : ""
      },
      "QueueCredentialConfigRequest" : {
        "required" : [ "basicPassword", "basicUsername" ],
        "type" : "object",
        "properties" : {
          "basicUsername" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string"
          },
          "basicPassword" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string"
          }
        },
        "description" : "A credential object"
      },
      "QueueCredential" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The unique identifier of the queue credential.",
            "format" : "int64"
          },
          "queueId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "username" : {
            "type" : "string"
          },
          "basicUsername" : {
            "type" : "string"
          },
          "basicPassword" : {
            "type" : "string"
          }
        },
        "description" : "Represents a credential for a feed queue."
      }
    },
    "securitySchemes" : {
      "apisecret" : {
        "type" : "apiKey",
        "name" : "X-ComposableRSS-API-Secret",
        "in" : "header"
      },
      "apikey" : {
        "type" : "apiKey",
        "name" : "X-ComposableRSS-API-Key",
        "in" : "header"
      }
    }
  }
}