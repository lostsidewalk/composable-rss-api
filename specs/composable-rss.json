{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ComposableRSS API",
    "description" : "ComposableRSS API",
    "contact" : {
      "name" : "Lost Sidewalk Software LLC",
      "url" : "https://www.lostsidewalk.com",
      "email" : "meh@lostsidewalk.com"
    },
    "version" : "1.0"
  },
  "externalDocs" : {
    "description" : "Composable RSS Official Documentation",
    "url" : "https://www.composablerss.com"
  },
  "servers" : [ {
    "url" : "https://api.composablerss.com",
    "description" : "ComposableRSS API Gateway"
  } ],
  "security" : [ {
    "apikey" : [ ]
  }, {
    "apisecret" : [ ]
  } ],
  "tags" : [ {
    "name" : "queue-controller",
    "description" : "Controller class for managing queue-related operations.\n <p>\n This controller provides endpoints for managing queue and subsidiary entities. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "queue-status-controller",
    "description" : "Controller class for managing queue status-related operations.\n <p>\n This controller provides endpoints for managing status (i.e., deployments). Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "queue-options-controller",
    "description" : "Controller class for managing queue export configuration-related operations.\n <p>\n This controller provides endpoints for managing export configurations within queues. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "queue-credentials-controller",
    "description" : "Controller class for managing credential-related operations.\n <p>\n This controller provides endpoints for managing credential objects within queues. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "post-controller",
    "description" : "Controller class for managing post-related operations.\n <p>\n This controller provides endpoints for managing staging posts and subsidiary entities. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "url-controller",
    "description" : "Controller class for managing URL-related operations.\n <p>\n This controller provides endpoints for managing URLs within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "post-status-controller",
    "description" : "Controller class for managing post status-related operations.\n <p>\n This controller provides endpoints for managing post status. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "media-controller",
    "description" : "Controller class for managing media-related operations.\n <p>\n This controller provides endpoints for managing media objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "enclosure-controller",
    "description" : "Controller class for managing enclosure-related operations.\n <p>\n This controller provides endpoints for managing enclosure objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "contributor-controller",
    "description" : "Controller class for managing contributor-related operations.\n <p>\n This controller provides endpoints for managing contributor objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "content-controller",
    "description" : "Controller class for managing content-related operations.\n <p>\n This controller provides endpoints for managing content objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  }, {
    "name" : "author-controller",
    "description" : "Base controller class for managing author-related operations.\n <p>\n This controller provides endpoints for managing author objects within posts. Authenticated\n users with the \"VERIFIED_ROLE\" have access to these operations."
  } ],
  "paths" : {
    "/v1/queues/{queueIdent}" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get a queue definition by identifier",
        "description" : "Get a queue definition by its identifier.",
        "operationId" : "getQueueById",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "if-none-match HTTP header value (for e-tag evaluation).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue definition",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Update the properties of an existing queue",
        "description" : "Update the properties of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the properties\n of an existing queue given by its identifier. The queue's configuration properties are provided\n in the request body.",
        "operationId" : "updateQueue",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue configuration properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueDTO"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete a queue given by its identifier",
        "description" : "Delete a queue given by its identifier.",
        "operationId" : "deleteQueue",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to be deleted",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Update the properties of an existing queue",
        "description" : "Update the properties of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the properties\n of an existing queue given by its identifier. The queue's configuration properties are provided\n in the request body.",
        "operationId" : "updateQueue_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to be updated",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue configuration properties.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueDTO"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/title" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the title of a queue given by its identifier",
        "description" : "Get the title of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the title of a\n queue given by its identifier.",
        "operationId" : "getQueueTitle",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the title from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue title",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the title of an existing queue",
        "description" : "Change the title of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the title\n of an existing queue.",
        "operationId" : "updateQueueTitle",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the title for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue title.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue title"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue title",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the title from a queue given by its identifier",
        "description" : "Delete the title for a queue given by its identifier.",
        "operationId" : "deleteQueueTitle",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue with the title to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue title",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the title of an existing queue",
        "description" : "Change the title of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the title\n of an existing queue.",
        "operationId" : "updateQueueTitle_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the title for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue title.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue title"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue title",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/status" : {
      "get" : {
        "tags" : [ "queue-status-controller" ],
        "summary" : "Get the status of a queue given by its identifier",
        "description" : "Get the status of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the status of a\n queue given by its identifier.",
        "operationId" : "getQueueStatus",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch status from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueStatusResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-status-controller" ],
        "summary" : "Change the deployment status of an existing queue",
        "description" : "Update the deployment status of queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the deployment status\n of an existing queue.",
        "operationId" : "updateQueueStatus",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the deployment status for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated queue status.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue status",
                "enum" : [ "DEPLOY_PENDING", "PUB_ALL", "DEPUB_ALL" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue deployment status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-status-controller" ],
        "summary" : "Change the deployment status of an existing queue",
        "description" : "Update the deployment status of queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the deployment status\n of an existing queue.",
        "operationId" : "updateQueueStatus_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the deployment status for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated queue status.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue status",
                "enum" : [ "DEPLOY_PENDING", "PUB_ALL", "DEPUB_ALL" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue deployment status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/options" : {
      "get" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Get the export options from the queue given by its identifier",
        "description" : "Get the export configuration from a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n export configuration from a queue given by its identifier.",
        "operationId" : "getExportOptions",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch export options from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExportConfigDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Update the export options on the queue given by its identifier",
        "description" : "Update the export options for the queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n export options of a queue given by its identifier.",
        "operationId" : "updateOptions",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier the queue to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Delete all export options from the queue given by identifier",
        "description" : "Delete all queue export options from a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete all\n queue export configuration from a queue given by its identifier.",
        "operationId" : "deleteOptions",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Update the export options on the queue given by its identifier",
        "description" : "Update the export options for the queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n export options of a queue given by its identifier.",
        "operationId" : "updateOptions_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier the queue to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExportConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/options/rssConfig" : {
      "get" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Get the RSS export configuration from the queue given by Id",
        "description" : "Get the RSS export configuration for the queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n RSS export configuration for the queue given by its identifier.",
        "operationId" : "getRssExportOptions",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch RSS export configuration from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched RSS export configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RSS20Config"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Update the RSS export options on the queue given by its identifier",
        "description" : "Update the RSS export options for the queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n RSS export options of a queue given by its identifier.",
        "operationId" : "updateRssOptions",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/RSS20Config"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated RSS export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Delete RSS export options from the queue given by its identifier",
        "description" : "Delete the RSS export configuration from a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n RSS export configuration from a queue given by its identifier.",
        "operationId" : "deleteRssOptions",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted RSS export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Update the RSS export options on the queue given by its identifier",
        "description" : "Update the RSS export options for the queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n RSS export options of a queue given by its identifier.",
        "operationId" : "updateRssOptions_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/RSS20Config"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated RSS export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/options/atomConfig" : {
      "get" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Get the ATOM export configuration from the queue given by Id",
        "description" : "Get the ATOM export configuration for the queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n ATOM export configuration for the queue given by its identifier.",
        "operationId" : "getAtomExportOptions",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch ATOM export configuration from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched ATOM export configuration",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Atom10Config"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Update the ATOM export options on the queue given by its identifier",
        "description" : "Update the ATOM export options for the queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n ATOM export options of a queue given by its identifier.",
        "operationId" : "updateAtomOptions",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Atom10Config"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated ATOM export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Delete ATOM export options from the queue given by its identifier",
        "description" : "Delete the ATOM export configuration from a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n ATOM export configuration from a queue given by its identifier.",
        "operationId" : "deleteAtomOptions",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted ATOM export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-options-controller" ],
        "summary" : "Update the ATOM export options on the queue given by its identifier",
        "description" : "Update the ATOM export options for the queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n ATOM export options of a queue given by its identifier.",
        "operationId" : "updateAtomOptions_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Atom10Config"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated ATOM export options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/language" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the language of a queue given by its identifier",
        "description" : "Get the language of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the language of a\n queue given by its identifier.",
        "operationId" : "getQueueLanguage",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the language from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue language",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the language of an existing queue",
        "description" : "Change the language of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the language\n of an existing queue.",
        "operationId" : "updateQueueLanguage",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the language for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue language.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue language"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue language",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the language of an existing queue",
        "description" : "Change the language of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the language\n of an existing queue.",
        "operationId" : "updateQueueLanguage_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the language for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue language.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue language"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue language",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/imgsrc" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the image source of a queue given by its identifier",
        "description" : "Get the image source of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the image source of a\n queue given by its identifier.",
        "operationId" : "getQueueImageSource",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the image source from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue image source",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the image source of an existing queue",
        "description" : "Change the image source of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the image source\n of an existing queue.",
        "operationId" : "updateQueueImageSource",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the image source for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The source for the queue thumbnail image.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated image source"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue image source",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the image source from a queue givne by its identifier",
        "description" : "Delete the image source for a queue given by its identifier.",
        "operationId" : "deleteQueueImageSource",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue with the image source to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue image source",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the image source of an existing queue",
        "description" : "Change the image source of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the image source\n of an existing queue.",
        "operationId" : "updateQueueImageSource_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the image source for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The source for the queue thumbnail image.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated image source"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue image source",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/ident" : {
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the identifier of an existing queue",
        "description" : "Change the identifier of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the identifier\n of an existing queue.",
        "operationId" : "updateQueueIdent",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the identifier for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue identifier.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue identifier"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue identifier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the identifier of an existing queue",
        "description" : "Change the identifier of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the identifier\n of an existing queue.",
        "operationId" : "updateQueueIdent_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the identifier for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue identifier.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue identifier"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue identifier",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/generator" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the generator of a queue given by its identifier",
        "description" : "Get the generator of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the generator of a\n queue given by its identifier.",
        "operationId" : "getQueueGenerator",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the generator from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue generator",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the generator of an existing queue",
        "description" : "Change the generator of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the generator\n of an existing queue.",
        "operationId" : "updateQueueGenerator",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the generator for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue generator.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue generator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue generator",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the generator from a queue given by its identifier",
        "description" : "Delete the generator for a queue given by its identifier.",
        "operationId" : "deleteQueueGenerator",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue with the generator to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue generator",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the generator of an existing queue",
        "description" : "Change the generator of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the generator\n of an existing queue.",
        "operationId" : "updateQueueGenerator_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the generator for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue generator.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue generator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue generator",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/description" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the description of a queue given by its identifier",
        "description" : "Get the description of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get description of a\n queue given by its identifier.",
        "operationId" : "getQueueDescription",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the description from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue description",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the description of an existing queue",
        "description" : "Change the description of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the description\n of an existing queue.",
        "operationId" : "updateQueueDescription",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the description for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue description.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue description"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue description",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the description from a queue given by its identifier",
        "description" : "Delete the description for a queue given by its identifier.",
        "operationId" : "deleteQueueDescription",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue with the description to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue description",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the description of an existing queue",
        "description" : "Change the description of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the description\n of an existing queue.",
        "operationId" : "updateQueueDescription_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the description for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue description.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue description"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue description",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/credentials/{credentialId}" : {
      "get" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Get a queue credential by Id",
        "description" : "Get a queue credential by its Id in a queue given by its identifier.",
        "operationId" : "getQueueCredential",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the credential from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentialId",
          "in" : "path",
          "description" : "The Id of the credential to fetch",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "if-none-match HTTP header value (for e-tag evaluation).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue credential",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Update the password on the queue credential given by Id, on a queue given by Id",
        "description" : "Update the password for the queue credential given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n password of a queue credential object given by its Id, on a queue given by its identifier.",
        "operationId" : "updatePassword",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentialId",
          "in" : "path",
          "description" : "The Id of the credential to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The new password for the credential"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Delete a queue credential by Id on a queue given by Id",
        "description" : "Delete a queue credential given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n queue credential given by its Id, on a queue given by its identifier.",
        "operationId" : "deleteQueueCredential",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentialId",
          "in" : "path",
          "description" : "The Id of the credential to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue credential",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Update the password on the queue credential given by Id, on a queue given by Id",
        "description" : "Update the password for the queue credential given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n password of a queue credential object given by its Id, on a queue given by its identifier.",
        "operationId" : "updatePassword_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "credentialId",
          "in" : "path",
          "description" : "The Id of the credential to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The new password for the credential"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated password",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/copyright" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the copyright of a queue given by its identifier",
        "description" : "Get the copyright of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the copyright of a\n queue given by its identifier.",
        "operationId" : "getQueueCopyright",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the copyright from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue copyright",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the copyright of an existing queue",
        "description" : "Change the copyright of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the copyright\n of an existing queue.",
        "operationId" : "updateQueueCopyright",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the copyright for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue copyright.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue copyright"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue copyright",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete the copyright from a queue given by its identifier",
        "description" : "Delete the copyright for a queue given by its identifier.",
        "operationId" : "deleteQueueCopyright",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue with the copyright to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue copyright",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the copyright of an existing queue",
        "description" : "Change the copyright of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the copyright\n of an existing queue.",
        "operationId" : "updateQueueCopyright_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the copyright for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The updated queue copyright.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string",
                "description" : "The updated queue copyright"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue copyright",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/auth" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the authentication requirement of a queue given by its identifier",
        "description" : "Get the authentication requirement of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the authentication requirement of a\n queue given by its identifier.",
        "operationId" : "getQueueAuthRequirement",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the authentication requirement from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue authentication requirement",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the authentication requirements of an existing queue",
        "description" : "Change the authentication requirement of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the authentication requirement\n of an existing queue.",
        "operationId" : "updateQueueAuthRequirement",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the authentication requirement for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated authentication requirement.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueAuthUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue authentication requirement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Change the authentication requirements of an existing queue",
        "description" : "Change the authentication requirement of an existing queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the authentication requirement\n of an existing queue.",
        "operationId" : "updateQueueAuthRequirement_1",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to update the authentication requirement for",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated authentication requirement.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueAuthUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated queue authentication requirement",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get a staging post by Id",
        "description" : "Get a staging post by its Id.",
        "operationId" : "getPost",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "if-none-match HTTP header value (for e-tag evaluation).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched staging post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostDTO"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the post given by Id",
        "description" : "Update a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update any\n attribute of a post given by its Id.",
        "operationId" : "updatePost",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the post given by Id",
        "description" : "Delete a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n a post given by its Id.",
        "operationId" : "deletePost",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostDeleteResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the post given by Id",
        "description" : "Update a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update any\n attribute of a post given by its Id.",
        "operationId" : "updatePost_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/urls" : {
      "get" : {
        "tags" : [ "url-controller" ],
        "summary" : "Get all URLs in a post by its Id",
        "description" : "Get all URLs in the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n URLs in a specific post given by its Id.",
        "operationId" : "getPostUrls",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch URLs from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The number of items to skip before returning results",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to return",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post URLs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostUrl"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "url-controller" ],
        "summary" : "Update all post URLs on a post given by Id",
        "description" : "Update all post URLs on a post a given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post URLs on a post given by its Id.",
        "operationId" : "updatePostURLs",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostUrlConfigRequest objects representing the URLs on the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PostUrlConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post URLs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "url-controller" ],
        "summary" : "Add a new URL to the post given by its Id",
        "description" : "Add a new URL to the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add a new URLs\n to a specific post given by its Id.",
        "operationId" : "addPostUrl",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add URL to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostUrlConfigRequest object, representing the new URL to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostUrlConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successfully added URL to post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "url-controller" ],
        "summary" : "Delete all post URLs on a post given by Id",
        "description" : "Delete all post URLs on a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete all\n post URLs on a post given by its Id.",
        "operationId" : "deletePostUrls",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete URLs from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post URLs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "url-controller" ],
        "summary" : "Update all post URLs on a post given by Id",
        "description" : "Update all post URLs on a post a given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post URLs on a post given by its Id.",
        "operationId" : "updatePostURLs_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostUrlConfigRequest objects representing the URLs on the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PostUrlConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post URLs",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/urls/{urlIdent}" : {
      "get" : {
        "tags" : [ "url-controller" ],
        "summary" : "Get a single URL in a post by its Id",
        "description" : "Get a single URL in the post given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve a single\n URL in a post given by its Id.",
        "operationId" : "getPostUrl",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch the URL from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "urlIdent",
          "in" : "path",
          "description" : "The identifier of the URL to fetch",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post URL",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostUrl"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "url-controller" ],
        "summary" : "Update a post URL on a post given by Ident",
        "description" : "Update a post URL given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post URL given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostUrl",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "urlIdent",
          "in" : "path",
          "description" : "The identifier of the URL to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A PostUrlConfigRequest, representing the URL to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostUrlConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post URL",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "url-controller" ],
        "summary" : "Delete a post URL by its identifier on a post given by Id",
        "description" : "Delete a post URL given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n post URL given by its identifier, on a post given by its Id.",
        "operationId" : "deletePostUrl",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete a URL from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "urlIdent",
          "in" : "path",
          "description" : "The identifier of the URL to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post URL",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "url-controller" ],
        "summary" : "Update a post URL on a post given by Ident",
        "description" : "Update a post URL given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post URL given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostUrl_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "urlIdent",
          "in" : "path",
          "description" : "The identifier of the URL to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A PostUrlConfigRequest, representing the URL to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostUrlConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post URL",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/title" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the title of a post given by its Id.",
        "description" : "Get the title of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n title of a post given by its Id.",
        "operationId" : "getPostTitle",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch title from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post title",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentObject"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the title of the post given by Id",
        "description" : "Update the title of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n title of a post given by its Id.",
        "operationId" : "updatePostTitle",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post title.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post title",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the title of the post given by Id",
        "description" : "Update the title of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n title of a post given by its Id.",
        "operationId" : "updatePostTitle_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post title.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post title",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/status" : {
      "get" : {
        "tags" : [ "post-status-controller" ],
        "summary" : "Get the status of a post given by its Id",
        "description" : "Get the status of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the status of a\n posts given by its Id.  The status of a post is given by the PostPubStatus enumeration.",
        "operationId" : "getPostStatus",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch status from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "post-status-controller" ],
        "summary" : "Update the publication status of the post given by Id",
        "description" : "Update the publication status of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n publication status of a post given by its Id. The status can be 'PUB_PENDING',\n 'DEPUB_PENDING', or null.",
        "operationId" : "updatePostStatus",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post status.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostStatusUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post publication status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostConfigResponse"
                  }
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "post-status-controller" ],
        "summary" : "Update the publication status of the post given by Id",
        "description" : "Update the publication status of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n publication status of a post given by its Id. The status can be 'PUB_PENDING',\n 'DEPUB_PENDING', or null.",
        "operationId" : "updatePostStatus_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post status.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostStatusUpdateRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post publication status",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostConfigResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/rights" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the rights string of a post given by its Id.",
        "description" : "Get the rights string of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n rights string of a post given by its Id.",
        "operationId" : "getPostRights",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch rights string from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post rights string",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the rights string of the post given by Id",
        "description" : "Update the rights string of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n rights string of a post given by its Id.",
        "operationId" : "updatePostRights",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post rights string.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post rights string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the rights string from a post given by Id",
        "description" : "Delete the rights string for a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the rights string from a post given by its Id.",
        "operationId" : "deletePostRights",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post with the rights string to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post rights string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the rights string of the post given by Id",
        "description" : "Update the rights string of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n rights string of a post given by its Id.",
        "operationId" : "updatePostRights_1",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post rights string.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post rights string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/media" : {
      "get" : {
        "tags" : [ "media-controller" ],
        "summary" : "Get the media in the post given by its Id",
        "description" : "Get the media in the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n media in a post given by its Id.",
        "operationId" : "getPostMedia",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch media from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post media",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostMedia"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "media-controller" ],
        "summary" : "Update the post media object on a post given by Id",
        "description" : "Update a post media object on a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post media object on a post given by its Id.",
        "operationId" : "updatePostMedia",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostMedia object, representing new media to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostMedia"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post media",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "media-controller" ],
        "summary" : "Delete a post media object from a post given by Id",
        "description" : "Delete a post media object from a post given by Id,\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n a post media object on a post given by its Id.",
        "operationId" : "deletePostMedia",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete media from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post media",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "media-controller" ],
        "summary" : "Update the post media object on a post given by Id",
        "description" : "Update a post media object on a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post media object on a post given by its Id.",
        "operationId" : "updatePostMedia_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostMedia object, representing new media to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostMedia"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post media",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/itunes" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the iTunes descriptor of a post given by its Id.",
        "description" : "Get the iTunes descriptor of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n iTunes descriptor of a post given by its Id.",
        "operationId" : "getPostITunes",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch iTunes descriptor from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post iTunes descriptor",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostITunes"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the iTunes descriptor of the post given by Id",
        "description" : "Update the iTunes descriptor of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n iTunes descriptor of a post given by its Id.",
        "operationId" : "updatePostITunes",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post iTunes descriptor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostITunes"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post iTunes descriptor",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the iTunes descriptor from a post given by Id",
        "description" : "Delete the iTunes descriptor for a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the iTunes descriptor from a post given by its Id.",
        "operationId" : "deletePostITunes",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post with the iTunes descriptor to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post iTunes descriptor",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the iTunes descriptor of the post given by Id",
        "description" : "Update the iTunes descriptor of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n iTunes descriptor of a post given by its Id.",
        "operationId" : "updatePostITunes_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post iTunes descriptor.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostITunes"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post iTunes descriptor",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/expiration" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the expiration timestamp of a post given by its Id.",
        "description" : "Get the expiration timestamp of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n expiration timestamp of a post given by its Id.",
        "operationId" : "getExpirationTimestamp",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch expiration timestamp from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post expiration timestamp",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the expiration timestamp of the post given by Id",
        "description" : "Update the expiration timestamp of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n expiration timestamp of a post given by its Id.",
        "operationId" : "updateExpirationTimestamp",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post expiration timestamp.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post expiration timestamp",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the expiration timestamp from a post given by Id",
        "description" : "Delete the expiration timestamp for a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the expiration timestamp from a post given by its Id.",
        "operationId" : "deleteExpirationTimestamp",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post with the expiration timestamp to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post expiration timestamp",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the expiration timestamp of the post given by Id",
        "description" : "Update the expiration timestamp of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n expiration timestamp of a post given by its Id.",
        "operationId" : "updateExpirationTimestamp_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post expiration timestamp.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post expiration timestamp",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/enclosures" : {
      "get" : {
        "tags" : [ "enclosure-controller" ],
        "summary" : "Get all enclosures in a post by its Id",
        "description" : "Get all enclosures in the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n enclosures in a specific post given by its Id.",
        "operationId" : "getPostEnclosures",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch enclosures from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The number of items to skip before returning results",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to return",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post enclosures",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostEnclosure"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "enclosure-controller" ],
        "summary" : "Update all post enclosures on a post given by Id",
        "description" : "Update all post enclosures on a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post enclosures, on a post given by its Id.",
        "operationId" : "updatePostEnclosures",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostEnclosureConfigRequest objects, representing the enclosures on the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PostEnclosureConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post enclosures",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "enclosure-controller" ],
        "summary" : "Add a new enclosure to the post given by its Id",
        "description" : "Add a new enclosure to the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add a new enclosure\n to a specific post given by its Id.",
        "operationId" : "addPostEnclosure",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add the enclosure to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostEnclosureConfigRequest object representing the new enclosure to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEnclosureConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successfully added enclosure to post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "enclosure-controller" ],
        "summary" : "Delete all post enclosures on a post given by Id",
        "description" : "Delete all post enclosures on a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete all\n post enclosures on a post given by its Id.",
        "operationId" : "deletePostEnclosures",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete enclosures from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post enclosures",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "enclosure-controller" ],
        "summary" : "Update all post enclosures on a post given by Id",
        "description" : "Update all post enclosures on a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post enclosures, on a post given by its Id.",
        "operationId" : "updatePostEnclosures_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostEnclosureConfigRequest objects, representing the enclosures on the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PostEnclosureConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post enclosures",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/enclosures/{enclosureIdent}" : {
      "get" : {
        "tags" : [ "enclosure-controller" ],
        "summary" : "Get a single enclosure in a post by its Id",
        "description" : "Get a single enclosure in the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve a single\n enclosure in a specific post given by its Id.",
        "operationId" : "getPostEnclosure",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch the enclosure from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "enclosureIdent",
          "in" : "path",
          "description" : "The identifier of the enclosure to fetch",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post enclosure",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostEnclosure"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "enclosure-controller" ],
        "summary" : "Update a post enclosure on a post given by Ident",
        "description" : "Update a post enclosure given by its identifier on a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post enclosure given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostEnclosure",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "enclosureIdent",
          "in" : "path",
          "description" : "The identifier of the enclosure to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A PostEnclosureConfigRequest, representing the enclosure to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEnclosureConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post enclosure",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "enclosure-controller" ],
        "summary" : "Delete a post enclosure by its identifier on a post given by Id",
        "description" : "Delete a post enclosure given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n post enclosure given by its identifier, on a post given by its Id.",
        "operationId" : "deletePostEnclosure",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete an enclosure from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "enclosureIdent",
          "in" : "path",
          "description" : "The identifier of the enclosure to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post enclosure",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "enclosure-controller" ],
        "summary" : "Update a post enclosure on a post given by Ident",
        "description" : "Update a post enclosure given by its identifier on a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post enclosure given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostEnclosure_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "enclosureIdent",
          "in" : "path",
          "description" : "The identifier of the enclosure to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A PostEnclosureConfigRequest, representing the enclosure to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostEnclosureConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post enclosure",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/description" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the description of a post given by its Id.",
        "description" : "Get the description of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n description of a post given by its Id.",
        "operationId" : "getPostDesc",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch description from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post description",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentObject"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the description of the post given by Id",
        "description" : "Update the description of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n description of a post given by its Id.",
        "operationId" : "updatePostDescription",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post description.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post description",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the description of the post given by Id",
        "description" : "Update the description of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n description of a post given by its Id.",
        "operationId" : "updatePostDescription_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The request containing the updated post description.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post description",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/contributors" : {
      "get" : {
        "tags" : [ "contributor-controller" ],
        "summary" : "Get all contributors in a post by its Id",
        "description" : "Get all contributors in a post given its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n contributors in a specific post given by its Id.",
        "operationId" : "getPostContributors",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch contributors from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "The number of items to skip before returning results",
          "in" : "query",
          "description" : "The number of items to skip before returning results.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "The maximum number of items to return",
          "in" : "query",
          "description" : "The maximum number of items to return.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post contributors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostPerson"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "contributor-controller" ],
        "summary" : "Update all post contributors on a post by its Id",
        "description" : "Update all post contributors on a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post contributors on a post given by its Id.",
        "operationId" : "updatePostContributors",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostPersonConfigRequest objects representing the contributors of the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PostPersonConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post contributors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "contributor-controller" ],
        "summary" : "Add a new contributor to a post by its Id",
        "description" : "Add a new contributor to a specific post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add new contributor\n to a specific post given by its Id.",
        "operationId" : "addPostContributor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add contributor to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostPersonConfigRequest object representing new contributor to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPersonConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successfully added the contributor to the post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contributor-controller" ],
        "summary" : "Delete all contributors from a post by its Id",
        "description" : "Delete all contributors from a post given its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete all\n contributors from a post given by its Id.",
        "operationId" : "deletePostContributors",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post contributors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "contributor-controller" ],
        "summary" : "Update all post contributors on a post by its Id",
        "description" : "Update all post contributors on a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post contributors on a post given by its Id.",
        "operationId" : "updatePostContributors_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostPersonConfigRequest objects representing the contributors of the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PostPersonConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post contributors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/contributors/{contributorIdent}" : {
      "get" : {
        "tags" : [ "contributor-controller" ],
        "summary" : "Get a single contributor in a post by its Id and contributor ident",
        "description" : "Get a single contributor in a post given its Id and the contributor identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve a single\n contributor in a specific post given by its Id.",
        "operationId" : "getPostContributor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch the contributor from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contributorIdent",
          "in" : "path",
          "description" : "The identifier of the contributor to fetch",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post contributor",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostPerson"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "contributor-controller" ],
        "summary" : "Update a post contributor by identifier on a post by Id",
        "description" : "Update a post contributor given by identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post contributor given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostContributor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contributorIdent",
          "in" : "path",
          "description" : "The identifier of the contributor to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A PostPersonConfigRequest representing new contributor to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPersonConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post contributor",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "contributor-controller" ],
        "summary" : "Delete a contributor from a post by Id and the contributor ident",
        "description" : "Delete a contributor from a post given its Id and contributor identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n contributor from a post given by its Id and the contributor's identifier.",
        "operationId" : "deletePostContributor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete the contributor from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contributorIdent",
          "in" : "path",
          "description" : "The identifier of the contributor to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post contributor",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "contributor-controller" ],
        "summary" : "Update a post contributor by identifier on a post by Id",
        "description" : "Update a post contributor given by identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post contributor given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostContributor_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contributorIdent",
          "in" : "path",
          "description" : "The identifier of the contributor to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A PostPersonConfigRequest representing new contributor to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPersonConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post contributor",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/content" : {
      "get" : {
        "tags" : [ "content-controller" ],
        "summary" : "Get all content in the post given by its Id",
        "description" : "Get all content in the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n content in a specific post given by its Id.",
        "operationId" : "getPostContent",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch content from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The number of items to skip before returning results",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to return",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post content",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContentObject"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "content-controller" ],
        "summary" : "Update the post contents on a post given by Id",
        "description" : "Update all post content on a post a given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post content on a post given by its Id.",
        "operationId" : "updatePostContents",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of ContentObjectConfigRequest objects representing the content of the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ContentObjectConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post contents",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "content-controller" ],
        "summary" : "Add new content to the post given by its Id",
        "description" : "Add new content to the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add new content\n to a specific post given by its Id.",
        "operationId" : "addPostContent",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add content to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A ContentObjectConfigRequest, representing new content to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObject"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successfully add content to post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "content-controller" ],
        "summary" : "Delete all post contents on a post given by Id",
        "description" : "Delete all post contents on a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete all\n post content on a post given by its Id.",
        "operationId" : "deletePostContents",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete content from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post contents",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "content-controller" ],
        "summary" : "Update the post contents on a post given by Id",
        "description" : "Update all post content on a post a given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post content on a post given by its Id.",
        "operationId" : "updatePostContents_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of ContentObjectConfigRequest objects representing the content of the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ContentObjectConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post contents",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/content/{contentIdent}" : {
      "get" : {
        "tags" : [ "content-controller" ],
        "summary" : "Get a single content in the post given by its Id",
        "description" : "Get a single content in the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve a single\n content in a specific post given by its Id.",
        "operationId" : "getPostContent_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch the content from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contentIdent",
          "in" : "path",
          "description" : "The identifier of the content to fetch",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post content",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContentObject"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "content-controller" ],
        "summary" : "Update the post content given by Ident, on a post given by Id",
        "description" : "Update a post content object given by its identifier on a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post content object given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostContent",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contentIdent",
          "in" : "path",
          "description" : "The identifier of the content to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A ContentObjectConfigRequest, representing new content to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObjectConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post content",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "content-controller" ],
        "summary" : "Delete the post content given by Ident, on a post given by Id",
        "description" : "Delete a post content object given by its identifier on a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete a\n post content object given by its identifier, on a post given by its Id.",
        "operationId" : "deletePostContent",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete content from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contentIdent",
          "in" : "path",
          "description" : "The identifier of the content to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post content",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "content-controller" ],
        "summary" : "Update the post content given by Ident, on a post given by Id",
        "description" : "Update a post content object given by its identifier on a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post content object given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostContent_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "contentIdent",
          "in" : "path",
          "description" : "The identifier of the content to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A ContentObjectConfigRequest, representing new content to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContentObjectConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post content",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/comment" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the comment string of a post given by its Id.",
        "description" : "Get the comment string of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n comment string of a post given by its Id.",
        "operationId" : "getPostComment",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch comment string from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post comment string",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the comment string of the post given by Id",
        "description" : "Update the comment string of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n comment string of a post given by its Id.",
        "operationId" : "updatePostComment",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post comment string.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post comment string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the comment string from a post given by Id",
        "description" : "Delete the comment string for a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the comment string from a post given by its Id.",
        "operationId" : "deletePostComment",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post with the comment string to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post comment string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the comment string of the post given by Id",
        "description" : "Update the comment string of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n comment string of a post given by its Id.",
        "operationId" : "updatePostComment_1",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post comment string.",
          "content" : {
            "*/*" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post comment string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/categories" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get all categories in the post given by its Id",
        "description" : "Get all categories in the post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n categories in a specific post given by its Id.",
        "operationId" : "getPostCategories",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch categories from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "The number of items to skip before returning results",
          "in" : "query",
          "description" : "The number of items to skip before returning results.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "The maximum number of items to return",
          "in" : "query",
          "description" : "The maximum number of items to return.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post categories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the categories of the post given by Id",
        "description" : "Update the categories of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n categories of a post given by its Id.",
        "operationId" : "updatePostCategories",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post categories.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post rights string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "post-controller" ],
        "summary" : "Delete the categories from a post given by Id",
        "description" : "Delete the categories for a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete\n the categories from a post given by its Id.",
        "operationId" : "deletePostCategories",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post with the rights string to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post categories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "post-controller" ],
        "summary" : "Update the categories of the post given by Id",
        "description" : "Update the categories of the post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update the\n categories of a post given by its Id.",
        "operationId" : "updatePostCategories_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The updated post categories.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post rights string",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/authors" : {
      "get" : {
        "tags" : [ "author-controller" ],
        "summary" : "Get all authors in a post by its Id",
        "description" : "Get all authors in a post given its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n authors in a specific post given by its Id.",
        "operationId" : "getPostAuthors",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch authors from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "The number of items to skip before returning results",
          "in" : "query",
          "description" : "The number of items to skip before returning results.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "The maximum number of items to return",
          "in" : "query",
          "description" : "The maximum number of items to return.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post authors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostPerson"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "author-controller" ],
        "summary" : "Update all post authors on a post by its Id",
        "description" : "Update all post authors on a post given its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post authors on a post given by its Id.",
        "operationId" : "updatePostAuthors",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostPersonConfigRequest objects representing the authors of the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PostPersonConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post authors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "author-controller" ],
        "summary" : "Add a new author to a post by its Id",
        "description" : "Add a new author to a specific post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add a new author\n to a specific post given by its Id.",
        "operationId" : "addPostAuthor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to add the author to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A PostPersonConfigRequest object representing the new author to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPersonConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successfully added the author to the post",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "author-controller" ],
        "summary" : "Delete all authors from a post by its Id",
        "description" : "Delete all authors from a post given its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete all\n authors from a post given by its Id.",
        "operationId" : "deletePostAuthors",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete authors from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post authors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "author-controller" ],
        "summary" : "Update all post authors on a post by its Id",
        "description" : "Update all post authors on a post given its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update all\n post authors on a post given by its Id.",
        "operationId" : "updatePostAuthors_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostPersonConfigRequest objects representing the authors of the post.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/PostPersonConfigRequest"
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post authors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/authors/{authorIdent}" : {
      "get" : {
        "tags" : [ "author-controller" ],
        "summary" : "Get a single author in a post by its Id and author ident",
        "description" : "Get a single author given by its identifier on a post given its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve a single\n author given by its identifier on a post given by its Id.",
        "operationId" : "getPostAuthor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch the author from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "authorIdent",
          "in" : "path",
          "description" : "The identifier of the author to fetch",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post author",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostPerson"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "author-controller" ],
        "summary" : "Update a post author by identifier on a post by Id",
        "description" : "Update a post author given by its identifier on a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post author given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostAuthor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "authorIdent",
          "in" : "path",
          "description" : "The identifier of the author to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A PostPersonConfigRequest object representing the author to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPersonConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post author",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "author-controller" ],
        "summary" : "Delete an author from a post by Id and author ident",
        "description" : "Delete an author from a post given its Id and author identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete an\n author from a post given by its Id and the author's identifier.",
        "operationId" : "deletePostAuthor",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to delete the author from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "authorIdent",
          "in" : "path",
          "description" : "The identifier of the author to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted post author",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "author-controller" ],
        "summary" : "Update a post author by identifier on a post by Id",
        "description" : "Update a post author given by its identifier on a post given by Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to update a\n post author given by its identifier, on a post given by its Id.",
        "operationId" : "updatePostAuthor_1",
        "parameters" : [ {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to update",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "authorIdent",
          "in" : "path",
          "description" : "The identifier of the author to update",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A PostPersonConfigRequest object representing the author to update.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostPersonConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Successfully updated post author",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get all queue definitions",
        "description" : "Get all queue definitions for the authenticated user.",
        "operationId" : "getQueues",
        "parameters" : [ {
          "name" : "The number of items to skip before returning results",
          "in" : "query",
          "description" : "The number of items to skip before returning results.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "The maximum number of items to return",
          "in" : "query",
          "description" : "The maximum number of items to return.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "if-none-match HTTP header value (for e-tag evaluation).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue definitions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QueueDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Create a new feed queue",
        "description" : "Create a new feed queue with the provided configuration.\n <p>\n This endpoint is used to create a new feed queue with the provided configuration.\n A feed queue is a structure used to manage, organize, and publish syndicated content in various formats\n such as RSS 2.0, ATOM, and JSON.",
        "operationId" : "createQueue",
        "requestBody" : {
          "description" : "A queue configuration request.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successfully created queue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/QueueConfigResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/posts" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get all posts in the queue given by its identifier",
        "description" : "Get all posts in the queue given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n posts in a queue given by its identifier.",
        "operationId" : "getPosts",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch posts from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "Limit the results to posts with the provided status",
          "in" : "query",
          "description" : "Limit the results to posts with the provided status.",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "PUB_PENDING", "DEPUB_PENDING" ]
          }
        }, {
          "name" : "The number of items to skip before returning results",
          "in" : "query",
          "description" : "The number of items to skip before returning results.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "The maximum number of items to return",
          "in" : "query",
          "description" : "The maximum number of items to return.",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "if-none-match HTTP header value (for e-tag evaluation).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched posts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Create new posts in the specified queue",
        "description" : "Create new posts in the specified queue.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to create new posts\n in a queue given by its Id.",
        "operationId" : "createPosts",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to create posts in",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A list of PostConfigRequests, representing new posts to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PostConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successfully created posts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PostCreateResponse"
                  }
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Delete all posts from a queue",
        "description" : "Delete all posts from a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete all\n posts from a queue.",
        "operationId" : "deletePosts",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to delete posts from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted posts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PostDeleteResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/credentials" : {
      "get" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Get all credentials in the queue given by its Id",
        "description" : "Get all credentials in the queue given by its identifier. Passwords are masked.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve all\n credentials in a specific queue given by its identifier.",
        "operationId" : "getQueueCredentials",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch credentials from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The number of items to skip before returning results",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The maximum number of items to return",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "If-None-Match",
          "in" : "header",
          "description" : "if-none-match HTTP header value (for e-tag evaluation).",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/QueueCredential"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Add a new credential to the queue given by its identifier",
        "description" : "Add a new credential to the queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to add a new credential\n to a specific queue given by its identifier.",
        "operationId" : "addQueueCredential",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to add the credential to",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "A QueueCredentialConfigRequest object representing the new credential to add.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/QueueCredentialConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Successfully added credential to the queue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "queue-credentials-controller" ],
        "summary" : "Delete all queue credentials from the queue given by its identifier",
        "description" : "Delete all queue credentials from a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to delete all\n queue credentials from a queue given by its identifier.",
        "operationId" : "deleteQueueCredentials",
        "parameters" : [ {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to delete",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted queue credentials",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/transport" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the transport identifier of a queue given by its identifier",
        "description" : "Get the transport identifier of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the transport identifier of a\n queue given by its identifier.",
        "operationId" : "getQueueTransport",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the transport identifier from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue transport identifier",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/queues/{queueIdent}/deployed" : {
      "get" : {
        "tags" : [ "queue-controller" ],
        "summary" : "Get the deployed timestamp of a queue given by its identifier",
        "description" : "Get the deployed timestamp of a queue given by its identifier.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to get the deployed timestamp of a\n queue given by its identifier.",
        "operationId" : "getQueueDeployedTimestamp",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "queueIdent",
          "in" : "path",
          "description" : "The identifier of the queue to fetch the deployed timestamp from",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched queue deployed timestamp",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/updated" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the last updated timestamp of a post given by its Id.",
        "description" : "Get the last updated timestamp of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n last updated timestamp of a post given by its Id.",
        "operationId" : "getLastUpdatedTimestamp",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch last updated timestamp from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post last updated timestamp",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/queue" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the queue identifier of a post given by its Id.",
        "description" : "Get the queue identifier of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n queue identifier of a post given by its Id.",
        "operationId" : "getPostQueueId",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch queue Id from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post queue Id",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/posts/{postId}/published" : {
      "get" : {
        "tags" : [ "post-controller" ],
        "summary" : "Get the published timestamp of a post given by its Id.",
        "description" : "Get the published timestamp of a post given by its Id.\n <p>\n This endpoint allows authenticated users with the \"VERIFIED_ROLE\" to retrieve the\n published timestamp of a post given by its Id.",
        "operationId" : "getPublishedTimestamp",
        "parameters" : [ {
          "name" : "Accept",
          "in" : "header",
          "required" : false,
          "schema" : {
            "type" : "string",
            "default" : "application/json"
          }
        }, {
          "name" : "postId",
          "in" : "path",
          "description" : "The Id of the post to fetch published timestamp from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully fetched post published timestamp",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              },
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "Atom10Config" : {
        "type" : "object",
        "properties" : {
          "authorName" : {
            "type" : "string"
          },
          "authorEmail" : {
            "type" : "string"
          },
          "authorUri" : {
            "type" : "string"
          },
          "contributorName" : {
            "type" : "string"
          },
          "contributorEmail" : {
            "type" : "string"
          },
          "contributorUri" : {
            "type" : "string"
          },
          "categoryTerm" : {
            "type" : "string"
          },
          "categoryLabel" : {
            "type" : "string"
          },
          "categoryScheme" : {
            "type" : "string"
          }
        }
      },
      "ExportConfigRequest" : {
        "type" : "object",
        "properties" : {
          "atomConfig" : {
            "$ref" : "#/components/schemas/Atom10Config"
          },
          "rssConfig" : {
            "$ref" : "#/components/schemas/RSS20Config"
          },
          "maxPublished" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isAutoDeploy" : {
            "type" : "boolean"
          }
        }
      },
      "QueueConfigRequest" : {
        "required" : [ "ident" ],
        "type" : "object",
        "properties" : {
          "ident" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the queue."
          },
          "title" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "The title of the queue (optional)."
          },
          "description" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The description of the queue (optional)."
          },
          "generator" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "The generator of the queue."
          },
          "options" : {
            "$ref" : "#/components/schemas/ExportConfigRequest"
          },
          "copyright" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The copyright information of the queue."
          },
          "language" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "The language of the queue."
          },
          "imgSrc" : {
            "maxLength" : 10240,
            "minLength" : 0,
            "type" : "string",
            "description" : "The image source of the queue."
          }
        },
        "description" : "A queue configuration request"
      },
      "RSS20Config" : {
        "type" : "object",
        "properties" : {
          "managingEditor" : {
            "type" : "string"
          },
          "webMaster" : {
            "type" : "string"
          },
          "categoryValue" : {
            "type" : "string"
          },
          "categoryDomain" : {
            "type" : "string"
          },
          "docs" : {
            "type" : "string"
          },
          "cloudDomain" : {
            "type" : "string"
          },
          "cloudProtocol" : {
            "type" : "string"
          },
          "cloudRegisterProcedure" : {
            "type" : "string"
          },
          "cloudPort" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ttl" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rating" : {
            "type" : "string"
          },
          "textInputTitle" : {
            "type" : "string"
          },
          "textInputDescription" : {
            "type" : "string"
          },
          "textInputName" : {
            "type" : "string"
          },
          "textInputLink" : {
            "type" : "string"
          },
          "skipHours" : {
            "type" : "string"
          },
          "skipDays" : {
            "type" : "string"
          }
        }
      },
      "ExportConfigDTO" : {
        "type" : "object",
        "properties" : {
          "atomConfig" : {
            "$ref" : "#/components/schemas/Atom10Config"
          },
          "rssConfig" : {
            "$ref" : "#/components/schemas/RSS20Config"
          },
          "maxPublished" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isAutoDeploy" : {
            "type" : "boolean"
          }
        }
      },
      "QueueDTO" : {
        "required" : [ "ident", "title", "transportIdent" ],
        "type" : "object",
        "properties" : {
          "ident" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string",
            "description" : "The identifier of the queue."
          },
          "title" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "The title of the queue.  If you have a website that contains the same information as your queue, the title of your\n queue should be the same as the title of your website.\n <p>\n RSS2: channel -> title\n ATOM1: feed -> title\n <p>\n Example: GoUpstate.com News Headlines"
          },
          "description" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "Phrase or sentence describing the queue.\n <p>\n RSS2: channel -> description\n ATOM1: feed -> subtitle\n <p>\n Example: The latest news from GoUpstate.com, a Spartanburg Herald-Journal Website."
          },
          "generator" : {
            "maxLength" : 512,
            "minLength" : 0,
            "type" : "string",
            "description" : "A string indicating the program used to generate the syndicated feed artifact.\n <p>\n RSS2: channel -> generator\n ATOM1: feed -> generator\n <p>\n Example: MightyInHouse Content System v2.3"
          },
          "transportIdent" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string",
            "description" : "The transport identifier of the queue.  This value is used to uniquely locate this queue within the FeedGears RSS\n platform."
          },
          "options" : {
            "$ref" : "#/components/schemas/ExportConfigDTO"
          },
          "copyright" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "Copyright notice for content in the queue.\n <p>\n RSS2: channel -> copyright\n ATOM1: feed -> rights\n <p>\n Example: Copyright 2002, Spartanburg Herald-Journal"
          },
          "language" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "The language the queue is published in. This allows aggregators to group all Italian language sites, for example,\n on a single page. A list of allowable values for this element, as provided by Netscape, is\n <a href=\"https://www.rssboard.org/rss-language-codes\">here</a>. You may also use\n <a href=\"http://www.w3.org/TR/REC-html40/struct/dirlang.html#langcodes\">values defined</a> by the W3C.\n <p>\n RSS2: channel -> language\n ATOM1: feed -> language\n <p>\n Example: en-us"
          },
          "queueImgSrc" : {
            "maxLength" : 10240,
            "minLength" : 0,
            "type" : "string",
            "description" : "Specifies a GIF, JPEG or PNG image that can be displayed with the channel.\n <p>\n This value is used to construct the image sub-element of the RSS 2.0 channel element, as well as the image and\n logo sub-elements of the ATOM 1.0 feed element.\n <p>\n RSS2: channel -> image\n ATOm1: feed -> icon, feed -> logo"
          },
          "lastDeployed" : {
            "type" : "string",
            "description" : "The timestamp when the queue was last deployed (built and published).  This, this value corresponds to the RSS\n 2.0 pubDate and lastBuildDate fields.\n <p>\n pubDate represents the publication date for the content in the channel. For example, the New York Times publishes\n on a daily basis, the publication date flips once every 24 hours. That's when the pubDate of the channel changes.\n All date-times in RSS conform to the Date and Time Specification of RFC 822, with the exception that the year may\n be expressed with two characters or four characters (four preferred).\n <p>\n lastBuildDate is the last time the content of the channel changed.\n <p>\n RSS2: channel -> lastBuildDate\n ATOM1: feed -> updated\n <p>\n Example: Sat, 07 Sep 2002 09:42:31 GMT",
            "format" : "date-time"
          },
          "isAuthenticated" : {
            "type" : "boolean",
            "description" : "Whether authentication is required for the queue.  Queues that require authentication are only accessible via BASIC\n authentication, when the username and password pair correspond to a QueueCredential entity defined for this queue."
          }
        },
        "description" : "A response model for a queue.  Objects of this type are returned when users invoke the API to fetch all\n queues defined for a specific user, or to create a new queue, or to update an existing one."
      },
      "DeployResponse" : {
        "required" : [ "publisherIdent", "timestamp" ],
        "type" : "object",
        "properties" : {
          "timestamp" : {
            "type" : "string",
            "format" : "date-time"
          },
          "publisherIdent" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string"
          },
          "urls" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "errors" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "QueueConfigResponse" : {
        "required" : [ "deployResponses", "queueDTO" ],
        "type" : "object",
        "properties" : {
          "queueDTO" : {
            "$ref" : "#/components/schemas/QueueDTO"
          },
          "deployResponses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DeployResponse"
            },
            "description" : "The results of deployment on all publishers."
          }
        },
        "description" : "A response model for queue configuration operations."
      },
      "ResponseMessage" : {
        "required" : [ "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "object"
          }
        },
        "description" : ""
      },
      "QueueAuthUpdateRequest" : {
        "required" : [ "isRequired" ],
        "type" : "object",
        "properties" : {
          "isRequired" : {
            "type" : "boolean",
            "description" : "The new authentication requirement to be set for the queue."
          }
        },
        "description" : "The updated authentication requirement"
      },
      "ContentObjectConfigRequest" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostConfigRequest" : {
        "required" : [ "postDesc", "postTitle" ],
        "type" : "object",
        "properties" : {
          "postTitle" : {
            "$ref" : "#/components/schemas/ContentObjectConfigRequest"
          },
          "postDesc" : {
            "$ref" : "#/components/schemas/ContentObjectConfigRequest"
          },
          "postContents" : {
            "type" : "array",
            "description" : "A list of ContentObject objects (the post content)",
            "items" : {
              "$ref" : "#/components/schemas/ContentObjectConfigRequest"
            }
          },
          "postITunes" : {
            "$ref" : "#/components/schemas/PostITunes"
          },
          "postUrl" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The (primary) post URL"
          },
          "postUrls" : {
            "type" : "array",
            "description" : "A list of alternate post URLs",
            "items" : {
              "$ref" : "#/components/schemas/PostUrlConfigRequest"
            }
          },
          "postComment" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string",
            "description" : "A URL of a page for comments relating to the post.\n <p>\n Example: http://ekzemplo.com/entry/4403/comments"
          },
          "postRights" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The rights associated with the post."
          },
          "contributors" : {
            "type" : "array",
            "description" : "The list of contributors to the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostPersonConfigRequest"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "The list of authors of the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostPersonConfigRequest"
            }
          },
          "postCategories" : {
            "type" : "array",
            "description" : "The list of categories associated with the post.\n <p>\n Example: Grateful Dead",
            "items" : {
              "type" : "string"
            }
          },
          "expirationTimestamp" : {
            "type" : "string",
            "description" : "The timestamp of when the post will expire.",
            "format" : "date-time"
          },
          "enclosures" : {
            "type" : "array",
            "description" : "A list of media objects that are attached to the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostEnclosureConfigRequest"
            }
          }
        },
        "description" : "List of post configuration requests"
      },
      "PostEnclosureConfigRequest" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "description" : "The URL of the enclosure."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the enclosure."
          },
          "length" : {
            "type" : "integer",
            "description" : "The length of the enclosure in bytes.",
            "format" : "int64"
          }
        },
        "description" : "An enclosure object"
      },
      "PostITunes" : {
        "type" : "object",
        "properties" : {
          "author" : {
            "type" : "string",
            "description" : "The author associated with this post"
          },
          "imageUri" : {
            "type" : "string",
            "description" : "The URI of the image associated with the post"
          },
          "keywords" : {
            "type" : "array",
            "description" : "Keywords associated with the post",
            "items" : {
              "type" : "string"
            }
          },
          "subTitle" : {
            "type" : "string",
            "description" : "Subtitle of the post"
          },
          "summary" : {
            "type" : "string",
            "description" : "Summary of the post"
          },
          "duration" : {
            "type" : "integer",
            "description" : "Duration of the post",
            "format" : "int64"
          },
          "episode" : {
            "type" : "integer",
            "description" : "Episode number of the post",
            "format" : "int32"
          },
          "episodeType" : {
            "type" : "string",
            "description" : "Type of the episode"
          },
          "order" : {
            "type" : "integer",
            "description" : "Order of the post",
            "format" : "int32"
          },
          "season" : {
            "type" : "integer",
            "description" : "Season number of the post",
            "format" : "int32"
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the post"
          },
          "isBlock" : {
            "type" : "boolean",
            "description" : "Indicates if the post is blocked"
          },
          "isExplicit" : {
            "type" : "boolean",
            "description" : "Indicates if the post is explicit"
          },
          "isCloseCaptioned" : {
            "type" : "boolean",
            "description" : "Indicates if the post is close captioned"
          }
        },
        "description" : "Represents iTunes-specific metadata associated with a post."
      },
      "PostPersonConfigRequest" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "The name of the person."
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the person."
          },
          "uri" : {
            "type" : "string",
            "description" : "The URI of the person."
          }
        },
        "description" : "An author object"
      },
      "PostUrlConfigRequest" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string",
            "description" : "The title of the URL."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the URL."
          },
          "href" : {
            "type" : "string",
            "description" : "The actual URL (href) value."
          },
          "hreflang" : {
            "type" : "string",
            "description" : "The language of the content at the URL."
          },
          "rel" : {
            "type" : "string",
            "description" : "The relationship of the URL to the current document."
          }
        },
        "description" : "A URL object"
      },
      "ContentObject" : {
        "type" : "object",
        "properties" : {
          "ident" : {
            "type" : "string",
            "description" : "A unique identifier for this content object."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the content object, describing its format (e.g., text, image, link)."
          },
          "value" : {
            "type" : "string",
            "description" : "The actual value or content of the content object."
          }
        },
        "description" : "Represents a content object within a post.\n\n <p>A content object is an entity that can be included within a post to represent various types of content,\n such as text, images, links, or multimedia. It typically includes a unique identifier, a type that describes\n the content format, and the actual content value."
      },
      "PostConfigResponse" : {
        "required" : [ "deployResponses", "postDTO" ],
        "type" : "object",
        "properties" : {
          "postDTO" : {
            "$ref" : "#/components/schemas/PostDTO"
          },
          "deployed" : {
            "type" : "boolean",
            "description" : "True if the updated post was deployed."
          },
          "deployResponses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DeployResponse"
            },
            "description" : "The results of deployment on all publishers."
          }
        },
        "description" : "A response model for post configuration operations."
      },
      "PostDTO" : {
        "required" : [ "importTimestamp", "postDesc", "postTitle", "queueIdent" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The unique identifier of the post.",
            "format" : "int64"
          },
          "queueIdent" : {
            "type" : "string",
            "description" : "The identifier of the queue to which the post belongs."
          },
          "postTitle" : {
            "$ref" : "#/components/schemas/ContentObject"
          },
          "postDesc" : {
            "$ref" : "#/components/schemas/ContentObject"
          },
          "postContents" : {
            "type" : "array",
            "description" : "A list of (HTML or text) content objects that are attached to the post.\n <p>\n RSS2: item -> content\n ATOM1: entry -> contents",
            "items" : {
              "$ref" : "#/components/schemas/ContentObject"
            }
          },
          "postITunes" : {
            "$ref" : "#/components/schemas/PostITunes"
          },
          "postUrl" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The (primary) post URL.  This is optional for RSS2 channel items, and required for ATOM1 feed entries.\n <p>\n RSS2: item -> link, item -> URI\n ATOM1: entry -> id"
          },
          "postUrls" : {
            "type" : "array",
            "description" : "A list of alternate post URLs.\n <p>\n ATOM1: entry -> otherLinks",
            "items" : {
              "$ref" : "#/components/schemas/PostUrl"
            }
          },
          "importTimestamp" : {
            "type" : "string",
            "description" : "The timestamp of when the post was imported.",
            "format" : "date-time"
          },
          "postComment" : {
            "maxLength" : 2048,
            "minLength" : 0,
            "type" : "string",
            "description" : "A URL of a page for comments relating to the post.\n <p>\n RSS2: item -> comments\n <p>\n Example: http://ekzemplo.com/entry/4403/comments"
          },
          "postRights" : {
            "maxLength" : 1024,
            "minLength" : 0,
            "type" : "string",
            "description" : "The rights associated with the post.\n <p>\n ATOM1: entry -> rights"
          },
          "contributors" : {
            "type" : "array",
            "description" : "A list of contributors to the post.\n <p>\n ATOM1: entry -> contributors",
            "items" : {
              "$ref" : "#/components/schemas/PostPerson"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "A list of authors of the post.\n <p>\n RSS2: item -> author\n ATOM1: entry -> authors",
            "items" : {
              "$ref" : "#/components/schemas/PostPerson"
            }
          },
          "postCategories" : {
            "type" : "array",
            "description" : "A list of categories associated with the post.\n <p>\n RSS2: item -> categories\n ATOm1: entry -> categories\n <p>\n Example: Grateful Dead",
            "items" : {
              "type" : "string"
            }
          },
          "publishTimestamp" : {
            "type" : "string",
            "description" : "The timestamp of when the post was published.\n <p>\n RSS2: item -> pubDate\n ATOM1: entry -> published",
            "format" : "date-time"
          },
          "expirationTimestamp" : {
            "type" : "string",
            "description" : "The timestamp of when the post will expire.\n <p>\n RSS2: item -> expirationDate",
            "format" : "date-time"
          },
          "enclosures" : {
            "type" : "array",
            "description" : "A list of media objects that are attached to the post.\n <p>\n RSS2: item -> enclosures",
            "items" : {
              "$ref" : "#/components/schemas/PostEnclosure"
            }
          },
          "lastUpdatedTimestamp" : {
            "type" : "string",
            "description" : "The timestamp of the last update to the post.\n <p>\n ATOM1: entry -> updated",
            "format" : "date-time"
          },
          "published" : {
            "type" : "boolean"
          }
        },
        "description" : "A response model for a post."
      },
      "PostEnclosure" : {
        "type" : "object",
        "properties" : {
          "ident" : {
            "type" : "string",
            "description" : "A unique identifier for this enclosure entity."
          },
          "url" : {
            "type" : "string",
            "description" : "The URL of the enclosure."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the enclosure, describing its format or media type (e.g., audio/mpeg, video/mp4)."
          },
          "length" : {
            "type" : "integer",
            "description" : "The length of the enclosure in bytes.",
            "format" : "int64"
          }
        },
        "description" : "Represents an enclosure associated with a post.\n\n <p>An enclosure typically includes information about a file or media attachment associated with a post.\n It includes a unique identifier, the URL of the enclosure, the type of the enclosure (e.g., audio, video),\n and the length of the enclosure in bytes."
      },
      "PostPerson" : {
        "type" : "object",
        "properties" : {
          "ident" : {
            "type" : "string",
            "description" : "A unique identifier for this entity."
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the person."
          },
          "email" : {
            "type" : "string",
            "description" : "The email address of the person."
          },
          "uri" : {
            "type" : "string",
            "description" : "The URI of the person."
          }
        },
        "description" : "Represents a person associated with a post."
      },
      "PostUrl" : {
        "type" : "object",
        "properties" : {
          "ident" : {
            "type" : "string",
            "description" : "A unique identifier for this entity."
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the URL."
          },
          "type" : {
            "type" : "string",
            "description" : "The type of the URL."
          },
          "href" : {
            "type" : "string",
            "description" : "The actual URL (href) value."
          },
          "hreflang" : {
            "type" : "string",
            "description" : "The language of the content at the URL."
          },
          "rel" : {
            "type" : "string",
            "description" : "The relationship of the URL to the current document."
          }
        },
        "description" : "Represents a URL associated with a post."
      },
      "PostStatusUpdateRequest" : {
        "required" : [ "newStatus" ],
        "type" : "object",
        "properties" : {
          "newStatus" : {
            "maxLength" : 64,
            "minLength" : 0,
            "type" : "string",
            "description" : "The new status to be set for the post."
          }
        },
        "description" : "The updated post status"
      },
      "PostMedia" : {
        "type" : "object",
        "properties" : {
          "postMediaMetadata" : {
            "$ref" : "#/components/schemas/PostMediaMetadata"
          },
          "postMediaGroups" : {
            "type" : "array",
            "description" : "List of media groups associated with the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaGroup"
            }
          },
          "postMediaContents" : {
            "type" : "array",
            "description" : "List of media contents associated with the post.",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaContent"
            }
          }
        },
        "description" : "Represents media information associated with a post."
      },
      "PostMediaCategory" : {
        "type" : "object",
        "properties" : {
          "label" : {
            "type" : "string"
          },
          "scheme" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaCommunity" : {
        "type" : "object",
        "properties" : {
          "postMediaStarRating" : {
            "$ref" : "#/components/schemas/PostMediaStarRating"
          },
          "postMediaStatistics" : {
            "$ref" : "#/components/schemas/PostMediaStatistics"
          },
          "postMediaTags" : {
            "uniqueItems" : true,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaTag"
            }
          }
        }
      },
      "PostMediaContent" : {
        "type" : "object",
        "properties" : {
          "audioChannels" : {
            "type" : "integer",
            "format" : "int32"
          },
          "bitRate" : {
            "type" : "number",
            "format" : "float"
          },
          "duration" : {
            "type" : "integer",
            "format" : "int64"
          },
          "expression" : {
            "$ref" : "#/components/schemas/PostMediaExpression"
          },
          "fileSize" : {
            "type" : "integer",
            "format" : "int64"
          },
          "frameRate" : {
            "type" : "number",
            "format" : "float"
          },
          "height" : {
            "type" : "integer",
            "format" : "int32"
          },
          "language" : {
            "type" : "string"
          },
          "medium" : {
            "type" : "string"
          },
          "metadata" : {
            "$ref" : "#/components/schemas/PostMediaMetadata"
          },
          "reference" : {
            "$ref" : "#/components/schemas/PostMediaReference"
          },
          "samplingRate" : {
            "type" : "number",
            "format" : "float"
          },
          "type" : {
            "type" : "string"
          },
          "width" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaCredit" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "scheme" : {
            "type" : "string"
          }
        }
      },
      "PostMediaExpression" : {
        "type" : "object",
        "properties" : {
          "expression" : {
            "type" : "string"
          }
        }
      },
      "PostMediaGroup" : {
        "type" : "object",
        "properties" : {
          "postMediaContents" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaContent"
            }
          },
          "postMediaMetadata" : {
            "$ref" : "#/components/schemas/PostMediaMetadata"
          },
          "defaultContentIndex" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaHash" : {
        "type" : "object",
        "properties" : {
          "hashStr" : {
            "type" : "string"
          },
          "algorithm" : {
            "type" : "string"
          }
        }
      },
      "PostMediaLicense" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "format" : "url"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaLocation" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "start" : {
            "$ref" : "#/components/schemas/Time"
          },
          "end" : {
            "$ref" : "#/components/schemas/Time"
          }
        }
      },
      "PostMediaMetadata" : {
        "type" : "object",
        "properties" : {
          "thumbnails" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaThumbnail"
            }
          },
          "community" : {
            "$ref" : "#/components/schemas/PostMediaCommunity"
          },
          "categories" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaCategory"
            }
          },
          "copyright" : {
            "type" : "string"
          },
          "copyrightUrl" : {
            "type" : "string",
            "format" : "uri"
          },
          "desc" : {
            "type" : "string"
          },
          "descType" : {
            "type" : "string"
          },
          "backLinks" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "url"
            }
          },
          "comments" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "credits" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaCredit"
            }
          },
          "hash" : {
            "$ref" : "#/components/schemas/PostMediaHash"
          },
          "keywords" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "licenses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaLicense"
            }
          },
          "locations" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaLocation"
            }
          },
          "peerLinks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaPeerLink"
            }
          },
          "prices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaPrice"
            }
          },
          "ratings" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaRating"
            }
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "restrictions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaRestriction"
            }
          },
          "rights" : {
            "type" : "string"
          },
          "scenes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaScene"
            }
          },
          "status" : {
            "$ref" : "#/components/schemas/PostMediaStatus"
          },
          "subTitles" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaSubTitle"
            }
          },
          "text" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PostMediaText"
            }
          },
          "title" : {
            "type" : "string"
          },
          "titleType" : {
            "type" : "string"
          }
        }
      },
      "PostMediaPeerLink" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "format" : "url"
          }
        }
      },
      "PostMediaPrice" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "RENT", "PURCHASE", "PACKAGE", "SUBSCRIPTION" ]
          },
          "price" : {
            "type" : "number"
          },
          "currency" : {
            "type" : "object",
            "properties" : {
              "currencyCode" : {
                "type" : "string"
              },
              "displayName" : {
                "type" : "string"
              },
              "symbol" : {
                "type" : "string"
              },
              "defaultFractionDigits" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCode" : {
                "type" : "integer",
                "format" : "int32"
              },
              "numericCodeAsString" : {
                "type" : "string"
              }
            }
          },
          "info" : {
            "type" : "string",
            "format" : "url"
          }
        }
      },
      "PostMediaRating" : {
        "type" : "object",
        "properties" : {
          "scheme" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaReference" : {
        "type" : "object",
        "properties" : {
          "uri" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "PostMediaRestriction" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/Type"
          },
          "relationship" : {
            "$ref" : "#/components/schemas/Relationship"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaScene" : {
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "startTime" : {
            "$ref" : "#/components/schemas/Time"
          },
          "endTime" : {
            "$ref" : "#/components/schemas/Time"
          }
        }
      },
      "PostMediaStarRating" : {
        "type" : "object",
        "properties" : {
          "average" : {
            "type" : "number",
            "format" : "double"
          },
          "count" : {
            "type" : "integer",
            "format" : "int32"
          },
          "max" : {
            "type" : "integer",
            "format" : "int32"
          },
          "min" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaStatistics" : {
        "type" : "object",
        "properties" : {
          "favorites" : {
            "type" : "integer",
            "format" : "int32"
          },
          "views" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaStatus" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string",
            "enum" : [ "active", "blocked", "deleted" ]
          }
        }
      },
      "PostMediaSubTitle" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "href" : {
            "type" : "string",
            "format" : "url"
          },
          "lang" : {
            "type" : "string"
          }
        }
      },
      "PostMediaTag" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PostMediaText" : {
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "end" : {
            "$ref" : "#/components/schemas/Time"
          },
          "start" : {
            "$ref" : "#/components/schemas/Time"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "PostMediaThumbnail" : {
        "type" : "object",
        "properties" : {
          "height" : {
            "type" : "integer",
            "format" : "int32"
          },
          "width" : {
            "type" : "integer",
            "format" : "int32"
          },
          "time" : {
            "$ref" : "#/components/schemas/Time"
          },
          "url" : {
            "type" : "string",
            "format" : "uri"
          }
        }
      },
      "Relationship" : {
        "type" : "object"
      },
      "Time" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "integer",
            "format" : "int64"
          }
        }
      },
      "Type" : {
        "type" : "object"
      },
      "PostCreateResponse" : {
        "required" : [ "deployResponses", "postIds" ],
        "type" : "object",
        "properties" : {
          "postIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "deployed" : {
            "type" : "boolean"
          },
          "deployResponses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DeployResponse"
            }
          }
        },
        "description" : "A response model for post create operations."
      },
      "QueueCredentialConfigRequest" : {
        "required" : [ "basicPassword", "basicUsername" ],
        "type" : "object",
        "properties" : {
          "basicUsername" : {
            "maxLength" : 100,
            "minLength" : 0,
            "type" : "string",
            "description" : "The username associated with this credential."
          },
          "basicPassword" : {
            "maxLength" : 256,
            "minLength" : 0,
            "type" : "string",
            "description" : "The password associated with this credential."
          }
        },
        "description" : "A credential object"
      },
      "QueueStatusResponse" : {
        "type" : "object",
        "properties" : {
          "publishedCt" : {
            "type" : "integer",
            "description" : "The number of published posts in the queue.",
            "format" : "int32"
          },
          "countByStatus" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int32"
            },
            "description" : "The number of posts inthe queue, grouped by PostPubStatus (i.e., PUB_PENDING, DEPUB_PENDING, ARCHIVED, etc.)."
          }
        },
        "description" : "A response model for queue status operations."
      },
      "QueueCredential" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The unique identifier of the queue credential.",
            "format" : "int64"
          },
          "queueId" : {
            "type" : "integer",
            "description" : "The identifier of the queue associated with the credential.",
            "format" : "int64"
          },
          "username" : {
            "type" : "string",
            "description" : "The username associated with the credential."
          },
          "basicUsername" : {
            "type" : "string",
            "description" : "The basic authentication username."
          },
          "basicPassword" : {
            "type" : "string",
            "description" : "The basic authentication password."
          },
          "created" : {
            "type" : "string",
            "description" : "The timestamp the queue was created.",
            "format" : "date-time"
          },
          "lastModified" : {
            "type" : "string",
            "description" : "The timestamp the queue was last modified in any way.",
            "format" : "date-time"
          }
        },
        "description" : "Represents a credential for a feed queue."
      },
      "PostDeleteResponse" : {
        "required" : [ "deployResponses", "message" ],
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string"
          },
          "deployResponses" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/DeployResponse"
            }
          }
        },
        "description" : "A response model for post delete operations."
      }
    },
    "securitySchemes" : {
      "apisecret" : {
        "type" : "apiKey",
        "name" : "X-ComposableRSS-API-Secret",
        "in" : "header"
      },
      "apikey" : {
        "type" : "apiKey",
        "name" : "X-ComposableRSS-API-Key",
        "in" : "header"
      }
    }
  }
}